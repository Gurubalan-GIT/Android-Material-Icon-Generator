{"version":3,"sources":["app/js/Banner.js","app/js/ColorPicker.js","app/js/ColorUtils.js","app/js/Dispatcher.js","app/js/ErrorManager.js","app/js/ExportManager.js","app/js/FileSaver.js","app/js/Icon.js","app/js/IconBase.js","app/js/IconManager.js","app/js/IconShadow.js","app/js/InputManager.js","app/js/PaperScopeManager.js","app/js/app.js","app/js/drawUtils.js","app/js/errors.js","app/js/gaConstants.js","app/js/gaUtils.js","app/js/licenses.js"],"names":[],"mappingslzphrrjzYA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtrGA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArCA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3CA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA5BA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlCA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAAA","file":"public/js/index.js","sourcesContent":["'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Banner = function () {\n    _createClass(Banner, null, [{\n        key: 'ID',\n        value: function ID() {\n            return 'banner';\n        }\n    }]);\n\n    function Banner() {\n        _classCallCheck(this, Banner);\n\n        this.rectangle = new Path.Rectangle(16, 24, 30, 12);\n        this.rectangle.style = {\n            shadowColor: new paper.Color(0, 0, 0, 0.3),\n            shadowBlur: 2,\n            shadowOffset: new paper.Point(0, 1)\n        };\n        this.rectangle.name = Banner.ID();\n        this.text = new PointText(new Point(29, 33));\n        this.text.characterStyle = {\n            fontSize: 8,\n            fontFamily: 'sans-serif',\n            fontWeight: 'bold'\n        };\n        this.text.justification = 'center';\n        this.hide();\n    }\n\n    _createClass(Banner, [{\n        key: 'setBackgroundColor',\n        value: function setBackgroundColor(color) {\n            this.rectangle.fillColor = color;\n        }\n    }, {\n        key: 'setTextColor',\n        value: function setTextColor(color) {\n            this.text.fillColor = color;\n        }\n    }, {\n        key: 'showBeta',\n        value: function showBeta() {\n            this.text.content = 'BETA';\n            this._centerText();\n            this.show();\n        }\n    }, {\n        key: 'showDev',\n        value: function showDev() {\n            this.text.content = 'DEV';\n            this._centerText();\n            this.show();\n        }\n    }, {\n        key: 'showFree',\n        value: function showFree() {\n            this.text.content = 'FREE';\n            this._centerText();\n            this.show();\n        }\n    }, {\n        key: 'showPro',\n        value: function showPro() {\n            this.text.content = 'PRO';\n            this._centerText();\n            this.show();\n        }\n    }, {\n        key: 'show',\n        value: function show() {\n            this.rectangle.visible = true;\n            this.text.visible = true;\n        }\n    }, {\n        key: 'hide',\n        value: function hide() {\n            this.rectangle.visible = false;\n            this.text.visible = false;\n        }\n    }, {\n        key: 'remove',\n        value: function remove() {\n            this.rectangle.remove();\n            this.text.remove();\n        }\n    }, {\n        key: 'setXPosition',\n        value: function setXPosition(xValue) {\n            this.rectangle.position.x = xValue + this.rectangle.bounds.width / 2;\n            this._centerText();\n        }\n    }, {\n        key: '_centerText',\n        value: function _centerText() {\n            this.text.position.x = this.rectangle.position.x;\n        }\n    }]);\n\n    return Banner;\n}();\n\nmodule.exports = Banner;\n","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ColorPicker = function () {\n\n    /**\n     * @param colorPickerObject jquery color picker object\n     * @param defaultColor initial color for this picker\n     * @param onColorChangeCallback callback which will be called when color has changed.\n     */\n    function ColorPicker(colorPickerObject, defaultColor, onColorChangeCallback) {\n        _classCallCheck(this, ColorPicker);\n\n        colorPickerObject.colorpicker({\n            color: defaultColor,\n            align: 'left'\n        }).on('changeColor.colorpicker', function () {\n            onColorChangeCallback(this.getColor());\n        }.bind(this));\n        this.colorPickerObject = colorPickerObject;\n    }\n\n    /**\n     * @returns the paper.js color object currently selected by this picker.\n     */\n\n\n    _createClass(ColorPicker, [{\n        key: 'getColor',\n        value: function getColor() {\n            var pickerColor = this.colorPickerObject.data('colorpicker').color.toRGB();\n            return new paper.Color(pickerColor.r / 255, pickerColor.g / 255, pickerColor.b / 255, pickerColor.a);\n        }\n    }]);\n\n    return ColorPicker;\n}();\n\nmodule.exports = ColorPicker;\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ColorUtils = function () {\n    function ColorUtils() {\n        _classCallCheck(this, ColorUtils);\n    }\n\n    _createClass(ColorUtils, [{\n        key: \"lightenColor\",\n        value: function lightenColor(color, amount) {\n            var usePound = false;\n            if (color[0] == \"#\") {\n                color = color.slice(1);\n                usePound = true;\n            }\n            var num = parseInt(color, 16);\n            var r = (num >> 16) + amount;\n            if (r > 255) {\n                r = 255;\n            } else if (r < 0) {\n                r = 0;\n            }\n            var b = (num >> 8 & 0x00FF) + amount;\n            if (b > 255) {\n                b = 255;\n            } else if (b < 0) {\n                b = 0;\n            }\n            var g = (num & 0x0000FF) + amount;\n            if (g > 255) {\n                g = 255;\n            } else if (g < 0) {\n                g = 0;\n            }\n            return (usePound ? \"#\" : \"\") + (g | b << 8 | r << 16).toString(16);\n        }\n    }]);\n\n    return ColorUtils;\n}();\n\nexports.default = new ColorUtils();\n","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar gaConstants = require('js/gaConstants');\n\nvar TRANSITION_TIME = 500; // ms, time between input / icon windows\n\nvar PAGE_INPUT = 0,\n    PAGE_EDITOR = 1;\n\n/**\n * Handles transitions between various windows.\n */\n\nvar Dispatcher = function () {\n\n    /**\n     * @param inputManager\n     * @param iconManager\n     * @param errorManager\n     * @param {string} preselectedIconUrl - A url pointing to a svg\n     * resource located on the server which should be loaded directly.\n     * Optional\n     */\n    function Dispatcher(inputManager, iconManager, errorManager, preselectedIconUrl) {\n        _classCallCheck(this, Dispatcher);\n\n        this.inputManager = inputManager;\n        this.iconManager = iconManager;\n        this.errorManager = errorManager;\n\n        this.inputManager.setSvgLoadedCallback(function (svgData) {\n            this.showEditor(svgData);\n        }.bind(this));\n\n        // setup svg loading\n        if (preselectedIconUrl) {\n            this.showEditor(preselectedIconUrl);\n        } else {\n            this.inputManager.setSvgLoadedCallback(function (svgData) {\n                this.showEditor(svgData);\n            }.bind(this));\n        }\n\n        // setup error handling\n        this.iconManager.setErrorCallback(function (error) {\n            ga('send', 'event', gaConstants.CATEGORY_INPUT, gaConstants.ACTION_ERROR, error.title);\n            this.errorManager.show(error);\n        }.bind(this));\n        this.errorManager.setDismissCallback(function () {\n            window.history.back();\n        });\n\n        // handle browser back button\n        window.history.pushState({ currentPage: PAGE_INPUT }, '', '');\n        window.onpopstate = function (event) {\n            var page = event && event.state && event.state.currentPage;\n            if (page === PAGE_INPUT) {\n                ga('send', 'event', gaConstants.CATEGORY_EDITOR, gaConstants.ACTION_BACK);\n                if (errorManager.isVisible()) errorManager.hide();\n                this.showInput();\n                return;\n            }\n\n            if (location.href.indexOf('#') >= 0) {\n                window.history.replaceState({ currentPage: PAGE_INPUT }, '', '');\n            }\n        }.bind(this);\n    }\n\n    _createClass(Dispatcher, [{\n        key: 'showEditor',\n        value: function showEditor(svgData) {\n            this.iconManager.show();\n            setTimeout(function () {\n                this.iconManager.onSvgLoaded(svgData);\n            }.bind(this), TRANSITION_TIME);\n\n            window.history.pushState({ currentPage: PAGE_EDITOR }, '', '');\n        }\n    }, {\n        key: 'showInput',\n        value: function showInput() {\n            this.iconManager.hide();\n        }\n    }]);\n\n    return Dispatcher;\n}();\n\nmodule.exports = Dispatcher;\n","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar TRANSITION_TIME = 500; // ms\n\nvar ErrorManager = function () {\n    function ErrorManager(errorContainer) {\n        _classCallCheck(this, ErrorManager);\n\n        this.errorContainer = errorContainer;\n        this.errorContent = this.errorContainer.find('#container-error-content');\n        this.closeBtn = this.errorContainer.find('#error-close');\n        this.title = errorContainer.find('#error-title');\n        this.msg1 = errorContainer.find('#error-msg-1');\n        this.msg2 = errorContainer.find('#error-msg-2');\n\n        // setup close\n        this.errorContainer.click(function () {\n            this.dismiss();\n        }.bind(this));\n        this.errorContent.click(function () {\n            // prevent clicks from going to background\n            return false;\n        });\n        this.closeBtn.click(function () {\n            this.dismiss();\n        }.bind(this));\n\n        this.visible = false;\n    }\n\n    _createClass(ErrorManager, [{\n        key: 'show',\n        value: function show(error) {\n            this.visible = true;\n\n            // setup content\n            this.title.html(error.title);\n            this.msg1.html(error.msg_1);\n            this.msg2.html(error.msg_2);\n\n            // setup escape to close\n            $(document).on('keyup.ErrorManager', function (event) {\n                if (event.keyCode === 27) this.dismiss();\n            }.bind(this));\n\n            // show!\n            this.errorContainer.css('display', 'inline');\n            this.errorContainer.css('opacity', 1);\n        }\n\n        /**\n         * User initiated dialog dismissal.\n         */\n\n    }, {\n        key: 'dismiss',\n        value: function dismiss() {\n            this.hide();\n            this.dismissCallback();\n        }\n\n        /**\n         * Hide dialog.\n         */\n\n    }, {\n        key: 'hide',\n        value: function hide() {\n            this.visible = false;\n\n            // un-register key listening\n            $(document).unbind('keyup.ErrorManager');\n\n            // hide\n            this.errorContainer.css('opacity', 0);\n            setTimeout(function () {\n                this.errorContainer.hide();\n            }.bind(this), TRANSITION_TIME);\n        }\n    }, {\n        key: 'isVisible',\n        value: function isVisible() {\n            return this.visible;\n        }\n\n        /**\n         * @param dismissCallback - callback which will be called when\n         * the dialog is dismissed by user.\n         */\n\n    }, {\n        key: 'setDismissCallback',\n        value: function setDismissCallback(dismissCallback) {\n            this.dismissCallback = dismissCallback;\n        }\n    }]);\n\n    return ErrorManager;\n}();\n\nmodule.exports = ErrorManager;\n","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar paperScope = require('js/PaperScopeManager'),\n    licenses = require('js/licenses'),\n    fileSaver = require('js/FileSaver'),\n    IconBase = require('js/IconBase'),\n    Banner = require('js/Banner');\n\nvar EXPORT_SETTINGS = [{ folderName: 'mipmap-mdpi', fileName: 'ic_launcher.png', factor: 1 }, { folderName: 'mipmap-hdpi', fileName: 'ic_launcher.png', factor: 1.5 }, { folderName: 'mipmap-xhdpi', fileName: 'ic_launcher.png', factor: 2 }, { folderName: 'mipmap-xxhdpi', fileName: 'ic_launcher.png', factor: 3 }, { folderName: 'mipmap-xxxhdpi', fileName: 'ic_launcher.png', factor: 4 }, { folderName: 'playstore', fileName: 'icon.png', factor: 512 / 48 }];\n\n/**\n * Creates a downloadable ZIP file.\n */\n\nvar ExportManager = function () {\n    function ExportManager() {\n        _classCallCheck(this, ExportManager);\n    }\n\n    _createClass(ExportManager, [{\n        key: 'createAndDownloadZip',\n\n\n        /**\n         * Creates + downloads the final ZIP file.\n         */\n        value: function createAndDownloadZip() {\n            var zip = new JSZip();\n            var rootFolder = zip.folder('icons');\n\n            // generate content\n            this.createAndZipImages(rootFolder);\n            this.createAndZipLicenses(rootFolder);\n\n            // download\n            fileSaver.saveAs(zip.generate({ type: 'blob' }), 'icons.zip');\n        }\n    }, {\n        key: 'createAndZipImages',\n        value: function createAndZipImages(rootFolder) {\n            var drawProject = paperScope.draw().project;\n            for (var i = 0; i < EXPORT_SETTINGS.length; ++i) {\n                var exportSettings = EXPORT_SETTINGS[i];\n\n                paperScope.activateExpo(i);\n                var exportProject = paperScope.expo(i).project;\n\n                // copy draw layer over to export canvas\n                exportProject.clear();\n                var layer = new paper.Layer();\n                for (var j = 0; j < drawProject.layers[0].children.length; ++j) {\n                    var child = drawProject.layers[0].children[j];\n                    if (!child.visible) continue;\n                    var clonedChild = child.clone(false);\n                    layer.addChild(clonedChild);\n                }\n                paperScope.expo(i).view.center = new paper.Point(24, 24); // center at icon center (which is 48 px big)\n                paperScope.expo(i).view.zoom = exportSettings.factor;\n                paperScope.expo(i).view.draw();\n\n                // copy png\n                var pngData = paperScope.expoCanvas(i)[0].toDataURL('image/png').split(',')[1];\n                var pngFileName = exportSettings.fileName;\n                rootFolder.folder(exportSettings.folderName).file(pngFileName, pngData, { base64: true });\n\n                if (i !== 0) continue;\n\n                // manually created shadow for raw svg\n                // huge thanks at the guys from paper js!\n                // https://github.com/paperjs/paper.js/issues/1003\n                var svgNode = exportProject.exportSVG();\n\n                var baseFilter = document.createElementNS('http://www.w3.org/2000/svg', 'filter');\n                baseFilter.innerHTML = '<feColorMatrix type=\"matrix\" values=\"0 0 0 0 0  0 0 0 0 0  0 0 0 0 0  0 0 0 .8 0\" /> <feOffset dx=\"0\" dy=\"1\"/> <feGaussianBlur stdDeviation=\"1\"/> <feComposite in=\"SourceGraphic\" />';\n                baseFilter.setAttribute('id', 'dropshadow-base');\n                svgNode.getElementsByTagName('defs')[0].appendChild(baseFilter);\n                var baseNode = svgNode.getElementById(IconBase.ID() + ' 1');\n                if (baseNode) baseNode.setAttribute('filter', 'url(#dropshadow-base)');\n\n                var bannerFilter = document.createElementNS('http://www.w3.org/2000/svg', 'filter');\n                bannerFilter.innerHTML = '<feColorMatrix type=\"matrix\" values=\"0 0 0 0 0  0 0 0 0 0  0 0 0 0 0  0 0 0 .4 0\" /> <feOffset dx=\"0\" dy=\"1\"/> <feGaussianBlur stdDeviation=\"0.5\"/> <feComposite in=\"SourceGraphic\" />';\n                bannerFilter.setAttribute('id', 'dropshadow-banner');\n                bannerFilter.setAttribute('x', '-10%');\n                bannerFilter.setAttribute('y', '-10%');\n                bannerFilter.setAttribute('width', '120%');\n                bannerFilter.setAttribute('height', '130%');\n                svgNode.getElementsByTagName('defs')[0].appendChild(bannerFilter);\n                var bannerNode = svgNode.getElementById(Banner.ID() + ' 1');\n                if (bannerNode) bannerNode.setAttribute('filter', 'url(#dropshadow-banner)');\n\n                // export svg!\n                var svgData = btoa(svgNode.outerHTML);\n                var svgFileName = 'icon.svg';\n                rootFolder.file(svgFileName, svgData, { base64: true });\n            }\n\n            // reactivate draw scope\n            paperScope.activateDraw();\n        }\n    }, {\n        key: 'createAndZipLicenses',\n        value: function createAndZipLicenses(rootFolder) {\n            var licenseFolder = rootFolder.folder('LICENSE');\n            licenseFolder.file('LICENSE.txt', licenses.LICENSE_GENERAL);\n            licenseFolder.file('LICENSE.CC_BY_NC_3.txt', licenses.LICENSE_CC_BY_NC_3);\n        }\n    }]);\n\n    return ExportManager;\n}();\n\nmodule.exports = new ExportManager();\n","\"use strict\";\n\n/* FileSaver.js\n * A saveAs() FileSaver implementation.\n * 1.1.20160319\n *\n * By Eli Grey, http://eligrey.com\n * License: MIT\n *   See https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md\n */\n\n/*global self */\n/*jslint bitwise: true, indent: 4, laxbreak: true, laxcomma: true, smarttabs: true, plusplus: true */\n\n/*! @source http://purl.eligrey.com/github/FileSaver.js/blob/master/FileSaver.js */\n\n/**\n * This is NOT the original FileSaver.js as it is presented on GitHub. In order to intercept the download\n * event with phantom.js / casper.js, the following changes were made:\n * - The download anchor is added to the DOM before clicking it (allows intercepting click events)\n * - The download anchor has an id: #FileSaver\n * - In Chrome the blob URLs are not immediately revoked, but rather after the default timeout (500 ms at the moment)\n */\n\nvar saveAs = saveAs || function (view) {\n\t\"use strict\";\n\t// IE <10 is explicitly unsupported\n\n\tif (typeof navigator !== \"undefined\" && /MSIE [1-9]\\./.test(navigator.userAgent)) {\n\t\treturn;\n\t}\n\tvar doc = view.document\n\t// only get URL when necessary in case Blob.js hasn't overridden it yet\n\t,\n\t    get_URL = function get_URL() {\n\t\treturn view.URL || view.webkitURL || view;\n\t},\n\t    save_link = doc.createElementNS(\"http://www.w3.org/1999/xhtml\", \"a\"),\n\t    can_use_save_link = \"download\" in save_link,\n\t    click = function click(node) {\n\t\tvar event = doc.createEvent('MouseEvent');\n\t\tevent.initMouseEvent(\"click\", true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n\t\tnode.dispatchEvent(event);\n\t},\n\t    is_safari = /Version\\/[\\d\\.]+.*Safari/.test(navigator.userAgent),\n\t    webkit_req_fs = view.webkitRequestFileSystem,\n\t    req_fs = view.requestFileSystem || webkit_req_fs || view.mozRequestFileSystem,\n\t    throw_outside = function throw_outside(ex) {\n\t\t(view.setImmediate || view.setTimeout)(function () {\n\t\t\tthrow ex;\n\t\t}, 0);\n\t},\n\t    force_saveable_type = \"application/octet-stream\",\n\t    fs_min_size = 0\n\t// See https://code.google.com/p/chromium/issues/detail?id=375297#c7 and\n\t// https://github.com/eligrey/FileSaver.js/commit/485930a#commitcomment-8768047\n\t// for the reasoning behind the timeout and revocation flow\n\t,\n\t    arbitrary_revoke_timeout = 500 // in ms\n\t,\n\t    revoke = function revoke(file) {\n\t\tvar revoker = function revoker() {\n\t\t\tif (typeof file === \"string\") {\n\t\t\t\t// file is an object URL\n\t\t\t\tget_URL().revokeObjectURL(file);\n\t\t\t} else {\n\t\t\t\t// file is a File\n\t\t\t\tfile.remove();\n\t\t\t}\n\t\t};\n\t\tsetTimeout(revoker, arbitrary_revoke_timeout);\n\t},\n\t    dispatch = function dispatch(filesaver, event_types, event) {\n\t\tevent_types = [].concat(event_types);\n\t\tvar i = event_types.length;\n\t\twhile (i--) {\n\t\t\tvar listener = filesaver[\"on\" + event_types[i]];\n\t\t\tif (typeof listener === \"function\") {\n\t\t\t\ttry {\n\t\t\t\t\tlistener.call(filesaver, event || filesaver);\n\t\t\t\t} catch (ex) {\n\t\t\t\t\tthrow_outside(ex);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\t    auto_bom = function auto_bom(blob) {\n\t\t// prepend BOM for UTF-8 XML and text/* types (including HTML)\n\t\tif (/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n\t\t\treturn new Blob([\"\\uFEFF\", blob], { type: blob.type });\n\t\t}\n\t\treturn blob;\n\t},\n\t    FileSaver = function FileSaver(blob, name, no_auto_bom) {\n\t\tif (!no_auto_bom) {\n\t\t\tblob = auto_bom(blob);\n\t\t}\n\t\t// First try a.download, then web filesystem, then object URLs\n\t\tvar filesaver = this,\n\t\t    type = blob.type,\n\t\t    blob_changed = false,\n\t\t    object_url,\n\t\t    target_view,\n\t\t    dispatch_all = function dispatch_all() {\n\t\t\tdispatch(filesaver, \"writestart progress write writeend\".split(\" \"));\n\t\t}\n\t\t// on any filesys errors revert to saving with object URLs\n\t\t,\n\t\t    fs_error = function fs_error() {\n\t\t\tif (target_view && is_safari && typeof FileReader !== \"undefined\") {\n\t\t\t\t// Safari doesn't allow downloading of blob urls\n\t\t\t\tvar reader = new FileReader();\n\t\t\t\treader.onloadend = function () {\n\t\t\t\t\tvar base64Data = reader.result;\n\t\t\t\t\ttarget_view.location.href = \"data:attachment/file\" + base64Data.slice(base64Data.search(/[,;]/));\n\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\tdispatch_all();\n\t\t\t\t};\n\t\t\t\treader.readAsDataURL(blob);\n\t\t\t\tfilesaver.readyState = filesaver.INIT;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// don't create more object URLs than needed\n\t\t\tif (blob_changed || !object_url) {\n\t\t\t\tobject_url = get_URL().createObjectURL(blob);\n\t\t\t}\n\t\t\tif (target_view) {\n\t\t\t\ttarget_view.location.href = object_url;\n\t\t\t} else {\n\t\t\t\tvar new_tab = view.open(object_url, \"_blank\");\n\t\t\t\tif (new_tab === undefined && is_safari) {\n\t\t\t\t\t//Apple do not allow window.open, see http://bit.ly/1kZffRI\n\t\t\t\t\tview.location.href = object_url;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\tdispatch_all();\n\t\t\trevoke(object_url);\n\t\t},\n\t\t    abortable = function abortable(func) {\n\t\t\treturn function () {\n\t\t\t\tif (filesaver.readyState !== filesaver.DONE) {\n\t\t\t\t\treturn func.apply(this, arguments);\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\t\t    create_if_not_found = { create: true, exclusive: false },\n\t\t    slice;\n\t\tfilesaver.readyState = filesaver.INIT;\n\t\tif (!name) {\n\t\t\tname = \"download\";\n\t\t}\n\t\tif (can_use_save_link) {\n\t\t\tobject_url = get_URL().createObjectURL(blob);\n\t\t\tsetTimeout(function () {\n\t\t\t\t$('body').append(save_link);\n\t\t\t\tsave_link.id = 'FileSaver';\n\t\t\t\tsave_link.href = object_url;\n\t\t\t\tsave_link.download = name;\n\t\t\t\tclick(save_link);\n\t\t\t\tdispatch_all();\n\t\t\t\trevoke(object_url);\n\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t$(save_link).remove();\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\t// Object and web filesystem URLs have a problem saving in Google Chrome when\n\t\t// viewed in a tab, so I force save with application/octet-stream\n\t\t// http://code.google.com/p/chromium/issues/detail?id=91158\n\t\t// Update: Google errantly closed 91158, I submitted it again:\n\t\t// https://code.google.com/p/chromium/issues/detail?id=389642\n\t\tif (view.chrome && type && type !== force_saveable_type) {\n\t\t\tslice = blob.slice || blob.webkitSlice;\n\t\t\tblob = slice.call(blob, 0, blob.size, force_saveable_type);\n\t\t\tblob_changed = true;\n\t\t}\n\t\t// Since I can't be sure that the guessed media type will trigger a download\n\t\t// in WebKit, I append .download to the filename.\n\t\t// https://bugs.webkit.org/show_bug.cgi?id=65440\n\t\tif (webkit_req_fs && name !== \"download\") {\n\t\t\tname += \".download\";\n\t\t}\n\t\tif (type === force_saveable_type || webkit_req_fs) {\n\t\t\ttarget_view = view;\n\t\t}\n\t\tif (!req_fs) {\n\t\t\tfs_error();\n\t\t\treturn;\n\t\t}\n\t\tfs_min_size += blob.size;\n\t\treq_fs(view.TEMPORARY, fs_min_size, abortable(function (fs) {\n\t\t\tfs.root.getDirectory(\"saved\", create_if_not_found, abortable(function (dir) {\n\t\t\t\tvar save = function save() {\n\t\t\t\t\tdir.getFile(name, create_if_not_found, abortable(function (file) {\n\t\t\t\t\t\tfile.createWriter(abortable(function (writer) {\n\t\t\t\t\t\t\twriter.onwriteend = function (event) {\n\t\t\t\t\t\t\t\ttarget_view.location.href = file.toURL();\n\t\t\t\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\t\t\t\tdispatch(filesaver, \"writeend\", event);\n\t\t\t\t\t\t\t\trevoke(file);\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\twriter.onerror = function () {\n\t\t\t\t\t\t\t\tvar error = writer.error;\n\t\t\t\t\t\t\t\tif (error.code !== error.ABORT_ERR) {\n\t\t\t\t\t\t\t\t\tfs_error();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\"writestart progress write abort\".split(\" \").forEach(function (event) {\n\t\t\t\t\t\t\t\twriter[\"on\" + event] = filesaver[\"on\" + event];\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\twriter.write(blob);\n\t\t\t\t\t\t\tfilesaver.abort = function () {\n\t\t\t\t\t\t\t\twriter.abort();\n\t\t\t\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tfilesaver.readyState = filesaver.WRITING;\n\t\t\t\t\t\t}), fs_error);\n\t\t\t\t\t}), fs_error);\n\t\t\t\t};\n\t\t\t\tdir.getFile(name, { create: false }, abortable(function (file) {\n\t\t\t\t\t// delete file if it already exists\n\t\t\t\t\tfile.remove();\n\t\t\t\t\tsave();\n\t\t\t\t}), abortable(function (ex) {\n\t\t\t\t\tif (ex.code === ex.NOT_FOUND_ERR) {\n\t\t\t\t\t\tsave();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfs_error();\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t}), fs_error);\n\t\t}), fs_error);\n\t},\n\t    FS_proto = FileSaver.prototype,\n\t    saveAs = function saveAs(blob, name, no_auto_bom) {\n\t\treturn new FileSaver(blob, name, no_auto_bom);\n\t};\n\t// IE 10+ (native saveAs)\n\tif (typeof navigator !== \"undefined\" && navigator.msSaveOrOpenBlob) {\n\t\treturn function (blob, name, no_auto_bom) {\n\t\t\tif (!no_auto_bom) {\n\t\t\t\tblob = auto_bom(blob);\n\t\t\t}\n\t\t\treturn navigator.msSaveOrOpenBlob(blob, name || \"download\");\n\t\t};\n\t}\n\n\tFS_proto.abort = function () {\n\t\tvar filesaver = this;\n\t\tfilesaver.readyState = filesaver.DONE;\n\t\tdispatch(filesaver, \"abort\");\n\t};\n\tFS_proto.readyState = FS_proto.INIT = 0;\n\tFS_proto.WRITING = 1;\n\tFS_proto.DONE = 2;\n\n\tFS_proto.error = FS_proto.onwritestart = FS_proto.onprogress = FS_proto.onwrite = FS_proto.onabort = FS_proto.onerror = FS_proto.onwriteend = null;\n\n\treturn saveAs;\n}(typeof self !== \"undefined\" && self || typeof window !== \"undefined\" && window || undefined.content);\n// `self` is undefined in Firefox for Android content script context\n// while `this` is nsIContentFrameMessageManager\n// with an attribute `content` that corresponds to the window\n\nif (typeof module !== \"undefined\" && module.exports) {\n\tmodule.exports.saveAs = saveAs;\n} else if (typeof define !== \"undefined\" && define !== null && define.amd !== null) {\n\tdefine([], function () {\n\t\treturn saveAs;\n\t});\n}\n","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar IconShadow = require('js/IconShadow'),\n    drawUtils = require('js/drawUtils');\n\nvar Icon = function () {\n\n    /**\n     * @param position - of this icon\n     * @param iconPath - of this icon (a single path)\n     * @param iconItem - the original icon with all paths + colors\n     * @param iconBase - for this icon\n     */\n    function Icon(position, iconPath, iconItem, iconBase) {\n        _classCallCheck(this, Icon);\n\n        this.originalPosition = new paper.Point(position);\n        this.isMonochrome = false;\n\n        this.iconPath = iconPath;\n        this.iconPath.position = position;\n        this.iconPath.fillColor = null;\n        this.iconPath.remove();\n\n        this.iconBase = iconBase;\n        this.iconShadow = new IconShadow(iconPath, iconBase);\n\n        this.iconItem = iconItem;\n        this.iconItem.moveAbove(iconBase.getPathWithoutShadows());\n        this.iconItem.position = position;\n        this.iconItem.onMouseDrag = function (event) {\n            this.move(event.delta);\n        }.bind(this);\n\n        this.size = Math.max(iconPath.bounds.width, iconPath.bounds.height);\n        this.scale = 1;\n\n        this.iconPath.moveAbove(iconBase.getPathWithoutShadows());\n\n        this.applyIcon();\n    }\n\n    _createClass(Icon, [{\n        key: 'setMonochrome',\n        value: function setMonochrome(isMonochrome) {\n            this.isMonochrome = isMonochrome;\n            if (isMonochrome) {\n                this.iconItem.visible = false;\n                this.applyIcon();\n            } else {\n                if (this.appliedIconPath) this.appliedIconPath.remove();\n                this.center();\n                this.iconItem.visible = true;\n            }\n        }\n\n        /**\n         * @param newSize absolute size in px which this icon should fit in (keeps aspect ratio)\n         */\n\n    }, {\n        key: 'setSize',\n        value: function setSize(newSize) {\n            var scale = newSize / this.size;\n            this.iconPath.scale(scale, this.iconPath.position);\n            this.iconItem.scale(scale, this.iconItem.position);\n            this.applyIcon();\n            this.iconShadow.scale(scale);\n            this.size = newSize;\n        }\n\n        /**\n         * Scales this icon + shadow without changing setting this.size. setScale(1) will rescale\n         * this object to its original size.\n         * @param newScale factor.\n         */\n\n    }, {\n        key: 'setScale',\n        value: function setScale(newScale) {\n            this.iconPath.scale(newScale / this.scale, this.iconPath.position);\n            this.iconItem.scale(newScale / this.scale, this.iconItem.position);\n            this.applyIcon();\n            this.iconShadow.scale(newScale / this.scale);\n            this.scale = newScale;\n        }\n\n        /**\n         * Sets the color of this icon.\n         * @param color paper.js compatible color value\n         */\n\n    }, {\n        key: 'setColor',\n        value: function setColor(color) {\n            this.color = color;\n            if (!this.appliedIconPath) return;\n            this.appliedIconPath.fillColor = color;\n        }\n\n        /**\n         * @param {paper.Point} delta - how much this icon + shadow should be moved.\n         */\n\n    }, {\n        key: 'move',\n        value: function move(delta) {\n            this.iconPath.position = this.iconPath.position.add(delta);\n            this.iconItem.position = this.iconItem.position.add(delta);\n            this.applyIcon();\n            this.iconShadow.move(delta);\n        }\n    }, {\n        key: 'center',\n        value: function center() {\n            this.iconShadow.move(this.originalPosition.subtract(this.iconPath.position));\n            this.iconPath.position = new paper.Point(this.originalPosition);\n            this.iconItem.position = new paper.Point(this.originalPosition);\n            this.applyIcon();\n        }\n\n        /**\n         * Remove this icon + shadow from the canvas.\n         */\n\n    }, {\n        key: 'remove',\n        value: function remove() {\n            this.iconPath.remove();\n            this.iconItem.remove();\n            this.iconShadow.remove();\n            if (this.appliedIconPath) this.appliedIconPath.remove();\n        }\n    }, {\n        key: 'getIconShadow',\n        value: function getIconShadow() {\n            return this.iconShadow;\n        }\n\n        /**\n         * this.iconPath is not actually visible on the canvas, but\n         * rather serves as a template for the actual icon path which is\n         * cut to fit the base.\n         */\n\n    }, {\n        key: 'applyIcon',\n        value: function applyIcon() {\n            if (!this.isMonochrome) {\n                return;\n            }\n\n            // cut icon to base\n            var basePath = this.iconBase.getPathWithoutShadows();\n            var newAppliedIconPath = this.iconPath.intersect(basePath);\n\n            if (this.appliedIconPath) {\n                this.appliedIconPath.replaceWith(newAppliedIconPath);\n            }\n            this.appliedIconPath = newAppliedIconPath;\n\n            // setup drag to move\n            this.appliedIconPath.onMouseDrag = function (event) {\n                this.move(event.delta);\n            }.bind(this);\n\n            // reapply color (if any)\n            if (this.color) {\n                this.setColor(this.color);\n            }\n        }\n    }]);\n\n    return Icon;\n}();\n\nmodule.exports = Icon;\n","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _ColorUtils = require('./ColorUtils');\n\nvar _ColorUtils2 = _interopRequireDefault(_ColorUtils);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar SHAPE_CIRCLE = 0,\n    SHAPE_SQUARE = 1,\n    SHAPE_RECT_TALL = 2,\n    SHAPE_RECT_WIDE = 3;\n\nvar FLAP_NONE = 0,\n    FLAP_TOP_LEFT = 1,\n    FLAP_TOP_RIGHT = 2,\n    FLAP_BOTTOM_RIGHT = 3,\n    FLAP_BOTTOM_LEFT = 4;\n\nvar flapSize = 10,\n    flapRadius = 2,\n    flapTangent = 0.625;\n\nvar IconBase = function () {\n    _createClass(IconBase, null, [{\n        key: 'ID',\n        value: function ID() {\n            return 'base 1';\n        }\n\n        /**\n         * @param center - of the icon base relative to the underlying canvas\n         */\n\n    }]);\n\n    function IconBase(center) {\n        _classCallCheck(this, IconBase);\n\n        var circleRadius = 22;\n        this.circleBasePath = new paper.Path.Circle({\n            center: center,\n            radius: circleRadius,\n            shadowColor: new paper.Color(0, 0, 0, 0.2),\n            shadowBlur: 2,\n            shadowOffset: new paper.Point(0, 1),\n            name: IconBase.ID()\n        });\n        this.circleBasePath.sendToBack();\n        this.shape = SHAPE_CIRCLE;\n        var scoreStencil = new paper.Shape.Rectangle(new paper.Point(center.x - circleRadius, center.y - circleRadius), new paper.Point(center.x + circleRadius, center.y));\n        this.circleBaseScorePath = this.circleBasePath.toPath().intersect(scoreStencil.toPath());\n        this.circleBaseScorePath.fillColor = 'rgba(0, 0, 0, 0.1)';\n        this.circleBaseScorePath.visible = false;\n\n        var squareWidth = 38;\n        this.squareBasePath = new paper.Path.Rectangle({\n            point: new paper.Point(center.x - squareWidth / 2, center.y - squareWidth / 2),\n            size: new paper.Size(squareWidth, squareWidth),\n            radius: 2,\n            shadowColor: this.circleBasePath.shadowColor,\n            shadowBlur: this.circleBasePath.shadowBlur,\n            shadowOffset: this.circleBasePath.shadowOffset,\n            name: IconBase.ID()\n        });\n        this.squareBasePath.sendToBack();\n        this.squareBasePath.visible = false;\n\n        this.squareBaseScorePath = this.squareBasePath.toPath().intersect(scoreStencil.toPath());\n        this.squareBaseScorePath.fillColor = 'rgba(0, 0, 0, 0.1)';\n        this.squareBaseScorePath.visible = false;\n\n        this.rectTallBasePath = new paper.Path.Rectangle({\n            point: new paper.Point(center.x - 16, center.y - 22),\n            size: new paper.Size(32, 44),\n            radius: 2,\n            shadowColor: this.circleBasePath.shadowColor,\n            shadowBlur: this.circleBasePath.shadowBlur,\n            shadowOffset: this.circleBasePath.shadowOffset,\n            name: IconBase.ID()\n        });\n        this.rectTallBasePath.sendToBack();\n        this.rectTallBasePath.visible = false;\n\n        this.rectTallScorePath = this.rectTallBasePath.toPath().intersect(scoreStencil.toPath());\n        this.rectTallScorePath.fillColor = 'rgba(0, 0, 0, 0.1)';\n        this.rectTallScorePath.visible = false;\n\n        this.rectWideBasePath = new paper.Path.Rectangle({\n            point: new paper.Point(center.x - 22, center.y - 16),\n            size: new paper.Size(44, 32),\n            radius: 2,\n            shadowColor: this.circleBasePath.shadowColor,\n            shadowBlur: this.circleBasePath.shadowBlur,\n            shadowOffset: this.circleBasePath.shadowOffset,\n            name: IconBase.ID()\n        });\n        this.rectWideBasePath.sendToBack();\n        this.rectWideBasePath.visible = false;\n\n        this.rectWideScorePath = this.rectWideBasePath.toPath().intersect(scoreStencil.toPath());\n        this.rectWideScorePath.fillColor = 'rgba(0, 0, 0, 0.1)';\n        this.rectWideScorePath.visible = false;\n\n        this.flapShadow = new paper.Path();\n        this.flapShadow.moveTo(new paper.Point(flapTangent, flapSize - flapTangent));\n        this.flapShadow.lineTo(new paper.Point(flapSize, flapSize));\n        this.flapShadow.lineTo(new paper.Point(flapSize, flapSize + flapSize - flapTangent * 2));\n        this.flapShadow.closePath();\n        this.flapShadow.fillColor = {\n            gradient: {\n                stops: [[new paper.Color(0, 0, 0, 1), 0], [new paper.Color(0, 0, 0, 0), 1]]\n            }\n        };\n        this.flapShadow.visible = false;\n\n        this.flapTemplate = new paper.Path();\n        this.flapTemplate.moveTo(new paper.Point(0, 0));\n        this.flapTemplate.lineTo(new paper.Point(flapSize, flapSize));\n        this.flapTemplate.lineTo(new paper.Point(flapRadius, flapSize));\n        this.flapTemplate.cubicCurveTo(new paper.Point(flapRadius - 1, flapSize), new paper.Point(0, flapSize - flapRadius + 1), new paper.Point(0, flapSize - flapRadius));\n        this.flapTemplate.closePath();\n        this.flapTemplate.visible = false;\n\n        this.flapTriangleTemplate = new paper.Path();\n        this.flapTriangleTemplate.moveTo(new paper.Point(0, 0));\n        this.flapTriangleTemplate.lineTo(new paper.Point(flapSize, flapSize));\n        this.flapTriangleTemplate.lineTo(new paper.Point(0, flapSize));\n        this.flapTriangleTemplate.closePath();\n        this.flapTriangleTemplate.visible = false;\n\n        this.flapType = FLAP_NONE;\n\n        this.scoreEffectEnabled = false;\n    }\n\n    _createClass(IconBase, [{\n        key: 'setSquareShape',\n        value: function setSquareShape() {\n            this.circleBasePath.visible = false;\n            this.squareBasePath.visible = true;\n            this.rectTallBasePath.visible = false;\n            this.rectWideBasePath.visible = false;\n            this.shape = SHAPE_SQUARE;\n            this.setScoreEffect(this.scoreEffectEnabled);\n            this.setFlapEffect(this.flapType);\n        }\n    }, {\n        key: 'setCircularShape',\n        value: function setCircularShape() {\n            this.circleBasePath.visible = true;\n            this.squareBasePath.visible = false;\n            this.rectTallBasePath.visible = false;\n            this.rectWideBasePath.visible = false;\n            this.shape = SHAPE_CIRCLE;\n            this.setScoreEffect(this.scoreEffectEnabled);\n            this.setFlapEffect(this.flapType);\n        }\n    }, {\n        key: 'setRectTallShape',\n        value: function setRectTallShape() {\n            this.circleBasePath.visible = false;\n            this.squareBasePath.visible = false;\n            this.rectTallBasePath.visible = true;\n            this.rectWideBasePath.visible = false;\n            this.shape = SHAPE_RECT_TALL;\n            this.setScoreEffect(this.scoreEffectEnabled);\n            this.setFlapEffect(this.flapType);\n        }\n    }, {\n        key: 'setRectWideShape',\n        value: function setRectWideShape() {\n            this.circleBasePath.visible = false;\n            this.squareBasePath.visible = false;\n            this.rectTallBasePath.visible = false;\n            this.rectWideBasePath.visible = true;\n            this.shape = SHAPE_RECT_WIDE;\n            this.setScoreEffect(this.scoreEffectEnabled);\n            this.setFlapEffect(this.flapType);\n        }\n    }, {\n        key: 'setColor',\n        value: function setColor(color) {\n            this.circleBasePath.fillColor = color;\n            this.squareBasePath.fillColor = color;\n            this.rectTallBasePath.fillColor = color;\n            this.rectWideBasePath.fillColor = color;\n            this.flapTemplate.fillColor = _ColorUtils2.default.lightenColor(color.toCSS(true), 30);\n            if (this.flap) this.flap.fillColor = this.flapTemplate.fillColor;\n        }\n    }, {\n        key: 'setCenter',\n        value: function setCenter(center) {\n            this.circleBasePath.center = center;\n            this.squareBasePath.center = center;\n            this.rectTallBasePath.center = center;\n            this.rectWideBasePath.center = center;\n        }\n    }, {\n        key: 'setScoreEffect',\n        value: function setScoreEffect(enableScore) {\n            this.scoreEffectEnabled = enableScore;\n            this.circleBaseScorePath.visible = false;\n            this.squareBaseScorePath.visible = false;\n            this.rectTallScorePath.visible = false;\n            this.rectWideScorePath.visible = false;\n            if (enableScore) {\n                if (this.shape === SHAPE_CIRCLE) this.circleBaseScorePath.visible = true;else if (this.shape === SHAPE_SQUARE) this.squareBaseScorePath.visible = true;else if (this.shape === SHAPE_RECT_TALL) this.rectTallScorePath.visible = true;else if (this.shape === SHAPE_RECT_WIDE) this.rectWideScorePath.visible = true;\n            }\n        }\n    }, {\n        key: 'setFlapTopRight',\n        value: function setFlapTopRight() {\n            this.setFlapEffect(FLAP_TOP_RIGHT);\n        }\n    }, {\n        key: 'setFlapBottomRight',\n        value: function setFlapBottomRight() {\n            this.setFlapEffect(FLAP_BOTTOM_RIGHT);\n        }\n    }, {\n        key: 'setFlapNone',\n        value: function setFlapNone() {\n            this.setFlapEffect(FLAP_NONE);\n        }\n    }, {\n        key: 'setFlapEffect',\n        value: function setFlapEffect(flapType) {\n            var _this = this;\n\n            this.flapType = flapType;\n\n            var squareConfig = {\n                position: new paper.Point(38, 10),\n                originalBaseName: 'originalSquareBasePath',\n                baseName: 'squareBasePath',\n                shape: SHAPE_SQUARE\n            };\n            var rectWideConfig = {\n                position: new paper.Point(41, 13),\n                originalBaseName: 'originalRectWideBasePath',\n                baseName: 'rectWideBasePath',\n                shape: SHAPE_RECT_WIDE\n            };\n            var rectTallConfig = {\n                position: new paper.Point(35, 7),\n                originalBaseName: 'originalRectTallBasePath',\n                baseName: 'rectTallBasePath',\n                shape: SHAPE_RECT_TALL\n            };\n\n            // cleanup flaps\n            [squareConfig, rectWideConfig, rectTallConfig].forEach(function (config) {\n                if (_this[config.originalBaseName]) {\n                    _this[config.originalBaseName].fillColor = _this[config.baseName].fillColor;\n                    _this[config.baseName].remove();\n                    _this[config.baseName] = _this[config.originalBaseName];\n                    if (_this.shape === config.shape) _this[config.baseName].visible = true;\n                    delete _this[config.originalBaseName];\n\n                    _this.flap.visible = false;\n                    _this.flap.remove();\n                    delete _this.flap;\n\n                    _this.flapShadow.visible = false;\n                }\n            });\n\n            if (flapType === FLAP_NONE) return;\n\n            // position specific flap config\n            switch (flapType) {\n                case FLAP_TOP_RIGHT:\n                    squareConfig.position = new paper.Point(38, 10);\n                    squareConfig.rotation = 0;\n                    squareConfig.shadow = true;\n\n                    rectWideConfig.position = new paper.Point(41, 13);\n                    rectWideConfig.rotation = 0;\n                    rectWideConfig.shadow = true;\n\n                    rectTallConfig.position = new paper.Point(35, 7);\n                    rectTallConfig.rotation = 0;\n                    rectTallConfig.shadow = true;\n                    break;\n\n                case FLAP_BOTTOM_RIGHT:\n                    squareConfig.position = new paper.Point(38, 38);\n                    squareConfig.rotation = 90;\n                    squareConfig.shadow = false;\n\n                    rectWideConfig.position = new paper.Point(41, 35);\n                    rectWideConfig.rotation = 90;\n                    rectWideConfig.shadow = false;\n\n                    rectTallConfig.position = new paper.Point(35, 41);\n                    rectTallConfig.rotation = 90;\n                    rectTallConfig.shadow = false;\n                    break;\n            }\n\n            var config = void 0;\n            switch (this.shape) {\n                case SHAPE_CIRCLE:\n                    return;\n                case SHAPE_SQUARE:\n                    config = squareConfig;\n                    break;\n                case SHAPE_RECT_WIDE:\n                    config = rectWideConfig;\n                    break;\n                case SHAPE_RECT_TALL:\n                    config = rectTallConfig;\n                    break;\n            }\n\n            // create flap\n            this.flap = this.flapTemplate.clone();\n            this.flap.position = config.position;\n            this.flap.visible = true;\n            this.flap.rotate(config.rotation);\n\n            // cut flap from base\n            var flapCut = this.flapTriangleTemplate.clone();\n            flapCut.position = config.position;\n            flapCut.rotate(180 + config.rotation);\n\n            this[config.originalBaseName] = this[config.baseName].clone();\n            this[config.originalBaseName].visible = false;\n\n            var newBasePath = this[config.baseName].subtract(flapCut);\n            this[config.baseName].remove();\n            this[config.baseName] = newBasePath;\n            this[config.baseName].sendToBack();\n\n            if (config.shadow) {\n                this.flapShadow.position = config.position.add(flapTangent / 2, flapSize / 2 + this.flapShadow.bounds.height / 2 - flapTangent);\n                this.flapShadow.fillColor.origin = this.flapShadow.bounds.topLeft;\n                this.flapShadow.fillColor.destination = this.flapShadow.bounds.bottomRight;\n                this.flapShadow.visible = true;\n            }\n        }\n    }, {\n        key: 'setFlapShadowIntensity',\n        value: function setFlapShadowIntensity(intensity) {\n            this.flapShadow.fillColor.gradient.stops[0].color.alpha = intensity;\n        }\n    }, {\n        key: 'getPathWithoutShadows',\n        value: function getPathWithoutShadows() {\n            if (this.shape === SHAPE_CIRCLE) return this.circleBasePath;else if (this.shape === SHAPE_SQUARE) return this.squareBasePath;else if (this.shape === SHAPE_RECT_TALL) return this.rectTallBasePath;else if (this.shape === SHAPE_RECT_WIDE) return this.rectWideBasePath;\n            console.warn('unknown base shape type ' + this.shape);\n        }\n\n        /**\n         * Remove this base + shadow from canvas.\n         */\n\n    }, {\n        key: 'remove',\n        value: function remove() {\n            this.circleBasePath.remove();\n            this.circleBaseScorePath.remove();\n            this.squareBasePath.remove();\n            this.squareBaseScorePath.remove();\n            this.rectTallBasePath.remove();\n            this.rectTallScorePath.remove();\n            this.rectWideBasePath.remove();\n            this.rectWideScorePath.remove();\n        }\n    }]);\n\n    return IconBase;\n}();\n\nmodule.exports = IconBase;\n","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar IconBase = require('js/IconBase'),\n    Icon = require('js/Icon'),\n    ColorPicker = require('js/ColorPicker'),\n    paperScope = require('js/PaperScopeManager'),\n    exportManager = require('js/ExportManager'),\n    errors = require('js/errors'),\n    gaConstants = require('js/gaConstants'),\n    Banner = require('js/Banner');\n\n// Default android icon size (48 DIP)\nvar CANVAS_SIZE = 48,\n    BASE_RADIUS = 21;\n\n/**\n * Handles adding icon + base.\n */\n\nvar IconManager = function () {\n\n    /**\n     * @param canvas - jquery canvas object\n     * @param containerEdit - jquery edit objects (can be multiple)\n     * @param btnDownload - jquery download button\n     * @param iconColorPicker - jquery icon color picker object\n     * @param baseColorPicker - jquery base color picker object\n     * @param sliderIconSize - jquery slider object for changing icon size\n     * @param sliderShadowLength - jquery slider object for changing shadow length\n     * @param sliderShadowIntensity - jquery slider object for changing shadow intensity\n     * @param sliderShadowFading - jquery slider object for changing shadow fading\n     */\n    function IconManager(canvas, containerEdit, btnDownload, iconColorPicker, baseColorPicker, sliderIconSize, sliderShadowLength, sliderShadowIntensity, sliderShadowFading, bannerColorPicker, bannerTextColorPicker) {\n        _classCallCheck(this, IconManager);\n\n        this.canvas = canvas;\n        this.containerEdit = containerEdit;\n        this.iconColorPicker = iconColorPicker;\n        this.baseColorPicker = baseColorPicker;\n        this.sliderIconSize = sliderIconSize;\n        this.sliderShadowLength = sliderShadowLength;\n        this.sliderShadowIntensity = sliderShadowIntensity;\n        this.sliderShadowFading = sliderShadowFading;\n        this.btnDownload = btnDownload;\n        this.bannerColorPicker = bannerColorPicker;\n        this.bannerTextColorPicker = bannerTextColorPicker;\n        this.loadingOverlay = this.containerEdit.find('#canvas-loading');\n        this.iconColorTypeCheckOriginal = this.containerEdit.find('#color-type-icon-original');\n        this.iconColorTypeCheckMonochrome = this.containerEdit.find('#color-type-icon-monochrome');\n\n        this.initCanvas();\n        this.initControls();\n    }\n\n    /**\n     * Initial canvas setup.\n     */\n\n\n    _createClass(IconManager, [{\n        key: 'initCanvas',\n        value: function initCanvas() {\n            // setup canvas\n            paper.install(window);\n            var canvasHeight = this.canvas.height();\n            this.canvas.attr('height', canvasHeight);\n            this.canvas.attr('width', canvasHeight);\n            paperScope.setCanvases(this.canvas, this.containerEdit);\n            paperScope.activateDraw();\n\n            // place icon in center on canvas\n            this.canvasSize = CANVAS_SIZE;\n            paperScope.draw().view.center = new paper.Point(CANVAS_SIZE / 2, CANVAS_SIZE / 2);\n            paperScope.draw().view.zoom = canvasHeight / CANVAS_SIZE;\n            this.center = new paper.Point(this.canvasSize / 2, this.canvasSize / 2);\n        }\n\n        /**\n         * Initial controls setup.\n         */\n\n    }, {\n        key: 'initControls',\n        value: function initControls() {\n            // setup base color picker\n            var defaultBaseColor = '#512DA8';\n            this.setIconBaseColorFunction = function (event, disableDraw) {\n                this.iconBase.setColor(this.baseColorPicker.getColor());\n                if (!disableDraw) {\n                    ga('send', 'event', gaConstants.CATEGORY_EDITOR, gaConstants.ACTION_CHANGE_BASE_COLOR);\n                    paperScope.draw().view.draw();\n                }\n            }.bind(this);\n            this.baseColorPicker = new ColorPicker(this.baseColorPicker, defaultBaseColor, this.setIconBaseColorFunction);\n\n            // setup icon color type radio button\n            var iconColorTypePicker = this.containerEdit.find('#color-type-icon input[name=\"radio-color-type-icon\"]');\n            var iconColorTypeCollapsibleContainer = this.containerEdit.find('#color-icon-collapsible-container');\n            this.setIconColorTypeFunction = function (event, disableDraw) {\n                var original = this.iconColorTypeCheckOriginal[0].checked === true;\n                var monochrome = this.iconColorTypeCheckMonochrome[0].checked === true;\n                if (monochrome) {\n                    iconColorTypeCollapsibleContainer.css('max-height', '200px');\n                } else {\n                    iconColorTypeCollapsibleContainer.css('max-height', '0');\n                }\n                this.icon.setMonochrome(monochrome);\n                ga('send', 'event', gaConstants.CATEGORY_EDITOR, gaConstants.ACTION_CHANGE_COLOR_TYPE, monochrome && 'monochrome' || 'original');\n                if (!disableDraw) paperScope.draw().view.draw();\n            }.bind(this);\n            iconColorTypePicker.change(this.setIconColorTypeFunction);\n\n            // setup icon color picker\n            var defaultIconColor = '#ffffff';\n            this.setIconColorFunction = function (event, disableDraw) {\n                this.icon.setColor(this.iconColorPicker.getColor());\n                if (!disableDraw) {\n                    ga('send', 'event', gaConstants.CATEGORY_EDITOR, gaConstants.ACTION_CHANGE_ICON_COLOR);\n                    paperScope.draw().view.draw();\n                }\n            }.bind(this);\n            this.iconColorPicker = new ColorPicker(this.iconColorPicker, defaultIconColor, this.setIconColorFunction);\n\n            // setup shadow length slider\n            this.setShadowLengthFunction = function (event, disableDraw) {\n                this.icon.getIconShadow().setLength(this.sliderShadowLengthData.getValue());\n                if (!disableDraw) {\n                    ga('send', 'event', gaConstants.CATEGORY_EDITOR, gaConstants.ACTION_CHANGE_SHADOW_LENGTH);\n                    paperScope.draw().view.draw();\n                }\n            }.bind(this);\n            this.sliderShadowLengthData = this.sliderShadowLength.slider().on('slide', this.setShadowLengthFunction).data('slider');\n\n            // setup shadow intensity slider\n            this.setShadowIntensityFunction = function (event, disableDraw) {\n                var intensity = this.sliderShadowIntensityData.getValue();\n                this.icon.getIconShadow().setIntensity(intensity);\n                this.iconBase.setFlapShadowIntensity(intensity);\n                if (!disableDraw) {\n                    ga('send', 'event', gaConstants.CATEGORY_EDITOR, gaConstants.ACTION_CHANGE_SHADOW_INTENSITY);\n                    paperScope.draw().view.draw();\n                }\n            }.bind(this);\n            this.sliderShadowIntensityData = this.sliderShadowIntensity.slider().on('slide', this.setShadowIntensityFunction).data('slider');\n\n            // setup shadow fading slider\n            this.setShadowFadingFunction = function (event, disableDraw) {\n                this.icon.getIconShadow().setFading(this.sliderShadowFadingData.getValue());\n                if (!disableDraw) {\n                    ga('send', 'event', gaConstants.CATEGORY_EDITOR, gaConstants.ACTION_CHANGE_SHADOW_FADING);\n                    paperScope.draw().view.draw();\n                }\n            }.bind(this);\n            this.sliderShadowFadingData = this.sliderShadowFading.slider().on('slide', this.setShadowFadingFunction).data('slider');\n\n            // setup icon size picker\n            this.setSizeFunction = function (event, disableDraw) {\n                var size = this.sliderIconSizeData.getValue();\n                var scale = 0.0954548 * Math.exp(0.465169 * size);\n                this.icon.setScale(scale);\n                if (!disableDraw) {\n                    ga('send', 'event', gaConstants.CATEGORY_EDITOR, gaConstants.ACTION_CHANGE_ICON_SIZE);\n                    paperScope.draw().view.draw();\n                }\n            }.bind(this);\n            this.sliderIconSizeData = this.sliderIconSize.slider().on('slide', this.setSizeFunction).data('slider');\n\n            // setup base shape button\n            var baseShapePicker = this.containerEdit.find('#base-shape input[name=\"radio-base-shape\"]');\n            this.setIconBaseShapeFunction = function (event, disableDraw) {\n                var setCircular = this.containerEdit.find('#base-shape-circle').prop('checked');\n                var setSquare = this.containerEdit.find('#base-shape-square').prop('checked');\n                var setRectTall = this.containerEdit.find('#base-shape-rect-tall').prop('checked');\n                var setRectWide = this.containerEdit.find('#base-shape-rect-wide').prop('checked');\n                if (setCircular) {\n                    this.iconBase.setCircularShape();\n                    this.banner.setXPosition(16);\n                } else if (setSquare) {\n                    this.iconBase.setSquareShape();\n                    this.banner.setXPosition(13);\n                } else if (setRectTall) {\n                    this.iconBase.setRectTallShape();\n                    this.banner.setXPosition(10);\n                } else if (setRectWide) {\n                    this.iconBase.setRectWideShape();\n                    this.banner.setXPosition(16);\n                }\n\n                // toggle flap\n                var flapEffectToggle = this.containerEdit.find('#base-effect-flap-container');\n                if (setCircular) flapEffectToggle.hide();else flapEffectToggle.show();\n\n                if (this.icon) {\n                    ga('send', 'event', gaConstants.CATEGORY_EDITOR, gaConstants.ACTION_CHANGE_BASE_SHAPE, setCircular ? 'circular' : setSquare ? 'square' : setRectTall ? 'rect-tall' : 'rect-wide');\n                    this.icon.applyIcon();\n                    this.icon.getIconShadow().applyShadow();\n                }\n                if (!disableDraw) paperScope.draw().view.draw();\n            }.bind(this);\n            baseShapePicker.change(this.setIconBaseShapeFunction);\n\n            // setup base effect button\n            var baseEffectPicker = this.containerEdit.find('#base-effect input[name=\"radio-base-effect\"]');\n            this.setIconBaseEffectFunction = function (event, disableDraw) {\n                // toggle score effect\n                var scoreEffect = this.containerEdit.find('#base-effect-score').prop('checked');\n                this.iconBase.setScoreEffect(scoreEffect);\n\n                // toggle flap effect\n                var flapEffect = this.containerEdit.find('#base-effect-flap').prop('checked');\n                if (flapEffect) this.flapPositionFunction();else this.iconBase.setFlapNone();\n\n                // toggle flap controls\n                var flapCollapsibleContainer = $('#flap-effect-collapsible-container');\n                if (flapEffect) {\n                    flapCollapsibleContainer.css('max-height', '100px');\n                } else {\n                    flapCollapsibleContainer.css('max-height', '0');\n                }\n\n                if (this.icon) this.icon.iconShadow.applyShadow();\n\n                var gaLabel = scoreEffect ? 'score' : flapEffect ? 'flap' : 'none';\n                ga('send', 'event', gaConstants.CATEGORY_EDITOR, gaConstants.ACTION_CHANGE_BASE_EFFECT, gaLabel);\n                if (!disableDraw) paperScope.draw().view.draw();\n            }.bind(this);\n            baseEffectPicker.change(this.setIconBaseEffectFunction);\n\n            // setup flap position\n\n            var flapPositionPicker = this.containerEdit.find('#flap-position input[name=\"radio-flap-position\"]');\n            this.flapPositionFunction = function (event, disableDraw) {\n                var top = this.containerEdit.find('#flap-position-top').prop('checked');\n                var bottom = this.containerEdit.find('#flap-position-bottom').prop('checked');\n\n                if (top) this.iconBase.setFlapTopRight();\n                if (bottom) this.iconBase.setFlapBottomRight();\n                this.icon.iconShadow.applyShadow();\n\n                if (!disableDraw) paperScope.draw().view.draw();\n                ga('send', 'event', gaConstants.CATEGORY_EDITOR, gaConstants.ACTION_CHANGE_FLAP_POSITION, top ? 'top-right' : 'bottom-right');\n            }.bind(this);\n            flapPositionPicker.change(this.flapPositionFunction);\n\n            // setup banner container controller\n            var bannerPicker = this.containerEdit.find('#banner input[name=\"radio-banner\"]');\n            var bannerCollapsibleContainer = this.containerEdit.find('#banner-collapsible-container');\n            this.setBannerFunction = function (event, disableDraw) {\n                var enableBeta = this.containerEdit.find('#banner-beta')[0].checked === true;\n                var enableDev = this.containerEdit.find('#banner-dev')[0].checked === true;\n                var enableFree = this.containerEdit.find('#banner-free')[0].checked === true;\n                var enablePro = this.containerEdit.find('#banner-pro')[0].checked === true;\n                if (enableBeta || enableDev || enableFree || enablePro) {\n                    bannerCollapsibleContainer.css('max-height', '1000px');\n                } else {\n                    this.banner.hide();\n                    bannerCollapsibleContainer.css('max-height', '0');\n                }\n                var gaLabel = 'none';\n                if (enableBeta) {\n                    this.banner.showBeta();\n                    gaLabel = 'beta';\n                } else if (enableDev) {\n                    this.banner.showDev();\n                    gaLabel = 'dev';\n                } else if (enableFree) {\n                    this.banner.showFree();\n                    gaLabel = 'free';\n                } else if (enablePro) {\n                    this.banner.showPro();\n                    gaLabel = 'pro';\n                }\n                if (this.icon) {\n                    ga('send', 'event', gaConstants.CATEGORY_EDITOR, gaConstants.ACTION_CHANGE_BANNER_VALUE, gaLabel);\n                }\n                if (!disableDraw) paperScope.draw().view.draw();\n            }.bind(this);\n            bannerPicker.change(this.setBannerFunction);\n\n            // setup banner background color\n            var defaultBannerBackgroundColor = '#404041';\n            this.setBannerBackgroundColorFunction = function (event, disableDraw) {\n                this.banner.setBackgroundColor(this.bannerColorPicker.getColor());\n                if (!disableDraw) {\n                    ga('send', 'event', gaConstants.CATEGORY_EDITOR, gaConstants.ACTION_CHANGE_BANNER_BACKGROUND_COLOR);\n                    paperScope.draw().view.draw();\n                }\n            }.bind(this);\n            this.bannerColorPicker = new ColorPicker(this.bannerColorPicker, defaultBannerBackgroundColor, this.setBannerBackgroundColorFunction);\n\n            // setup banner text color\n            var defaultBannerTextColor = '#ffffff';\n            this.setBannerTextColorFunction = function (event, disableDraw) {\n                this.banner.setTextColor(this.bannerTextColorPicker.getColor());\n                if (!disableDraw) {\n                    ga('send', 'event', gaConstants.CATEGORY_EDITOR, gaConstants.ACTION_CHANGE_BANNER_TEXT_COLOR);\n                    paperScope.draw().view.draw();\n                }\n            }.bind(this);\n            this.bannerTextColorPicker = new ColorPicker(this.bannerTextColorPicker, defaultBannerTextColor, this.setBannerTextColorFunction);\n\n            // setup download\n            this.btnDownload.click(function () {\n                ga('send', 'event', gaConstants.CATEGORY_EDITOR, gaConstants.ACTION_DOWNLOAD);\n                exportManager.createAndDownloadZip();\n            }.bind(this));\n        }\n\n        /**\n         * @param {function} errorCallback - will be called if there was an error processing the svg file.\n         * Callback has a single argument, the error code.\n         */\n\n    }, {\n        key: 'setErrorCallback',\n        value: function setErrorCallback(errorCallback) {\n            this.errorCallback = errorCallback;\n        }\n\n        /**\n         * Handles the svg file loaded callback.\n         * @param svgData either raw svg data or a URL pointing to a svg file.\n         */\n\n    }, {\n        key: 'onSvgLoaded',\n        value: function onSvgLoaded(svgData) {\n            console.log('Loaded svg file: ' + svgData);\n\n            // remove any previous icons\n            if (this.icon) this.icon.remove();\n            if (this.iconBase) this.iconBase.remove();\n            if (this.banner) {\n                this.banner.remove();\n                var bannerCollapseController = this.containerEdit.find(\"#banner-controller\");\n                bannerCollapseController.prop(\"checked\", false).change();\n            }\n\n            this.loadingSvg = true;\n            paperScope.draw().project.importSVG(svgData, {\n                applyMatrix: true,\n                expandShapes: true,\n                onLoad: function (importedItem) {\n                    console.log('Imported svg data: ' + importedItem);\n\n                    if (!this.loadingSvg) return;\n                    this.loadingSvg = false; // on error callback is fired twice. This flag stops that\n\n                    // valid svg file?\n                    if (!importedItem) {\n                        this.errorCallback(errors.ERROR_INVALID_SVG_FILE);\n                        return;\n                    }\n\n                    // check if import contains SVG viewBox as first child\n                    if (importedItem instanceof paper.Group && importedItem.children.length > 1 && importedItem.children[0].type === 'rectangle') {\n\n                        importedItem.removeChildren(0, 1);\n                    }\n\n                    // resize import to target icon size to prevent shadow offset issues\n                    var iconSize = Math.max(importedItem.bounds.width, importedItem.bounds.height);\n                    importedItem.scale(20 / iconSize);\n                    importedItem.position = new paper.Point(24, 24);\n\n                    // check svg paths\n                    var importedPath = this.itemToSinglePath(importedItem.clone());\n                    if (!importedPath) {\n                        this.errorCallback(errors.ERROR_NO_PATH_FOUND);\n                        return;\n                    }\n\n                    // close all paths\n                    this.closePath(importedPath);\n\n                    importedPath.strokeWidth = 0;\n\n                    // create banner\n                    this.setupBanner();\n\n                    // one time base setup\n                    this.setupBase();\n\n                    // create icon and shadow\n                    this.setupIcon(importedPath, importedItem);\n\n                    this.loadingOverlay.css('opacity', 0);\n                    this.canvas.css('opacity', 1);\n                    setTimeout(function () {\n                        this.loadingOverlay.hide();\n                    }.bind(this), 500);\n                }.bind(this)\n            });\n        }\n    }, {\n        key: 'setupBase',\n        value: function setupBase() {\n            this.iconBase = new IconBase(this.center);\n\n            // set default values\n            this.setIconBaseColorFunction(null, true);\n            this.setIconBaseShapeFunction(null, true);\n            this.setIconBaseEffectFunction(null, true);\n        }\n    }, {\n        key: 'setupBanner',\n        value: function setupBanner() {\n            this.banner = new Banner();\n\n            // set default values\n            this.setBannerFunction(null, true);\n            this.setBannerBackgroundColorFunction(null, true);\n            this.setBannerTextColorFunction(null, true);\n        }\n    }, {\n        key: 'setupIcon',\n        value: function setupIcon(importedPath, importedColoredItem) {\n            // create icon + shadow\n            var colorCount = this.countColorsInPath(importedColoredItem);\n            this.icon = new Icon(this.center, importedPath, importedColoredItem, this.iconBase);\n\n            // set default icon values\n            this.icon.setSize(20);\n            this.setSizeFunction(null, true);\n            this.setIconColorFunction(null, true);\n\n            this.iconColorTypeCheckMonochrome.prop('checked', colorCount <= 1);\n            this.iconColorTypeCheckOriginal.prop('checked', colorCount > 1);\n            this.setIconColorTypeFunction(null, true);\n\n            this.setShadowLengthFunction(null, true);\n            this.setShadowIntensityFunction(null, true);\n            this.setShadowFadingFunction(null, true);\n            this.icon.getIconShadow().applyShadow();\n        }\n    }, {\n        key: 'itemToSinglePath',\n        value: function itemToSinglePath(importedItem) {\n            // recursive search for paths in group\n            if (importedItem instanceof paper.Group) {\n                var possiblePaths = [];\n                for (var i = 0; i < importedItem.children.length; ++i) {\n                    var path = this.itemToSinglePath(importedItem.children[i]);\n                    if (path) possiblePaths.push(path);\n                }\n\n                // if only one path, return that one\n                if (possiblePaths.length == 0) return null;\n                if (possiblePaths.length == 1) return possiblePaths[0];\n\n                // if multiple paths, select all with fill color or stroke color\n                // (helps importing Google material icons, which always have a second 'invisible' path)\n                var filledPaths = [];\n                for (var _i = 0; _i < possiblePaths.length; ++_i) {\n                    var _path = possiblePaths[_i];\n                    if (_path.fillColor || _path.strokeColor) filledPaths.push(possiblePaths[_i]);\n                    _path.remove();\n                }\n\n                if (filledPaths.length === 0) return null;\n\n                var result = filledPaths[0];\n                for (var _i2 = 0; _i2 < filledPaths.length; ++_i2) {\n                    result = result.unite(filledPaths[_i2]);\n                }\n\n                result.fillColor = 'white';\n                return result;\n            } else if (importedItem instanceof paper.PathItem) {\n                return importedItem;\n            } else if (importedItem instanceof paper.Shape) {\n                var convertedPath = importedItem.toPath(true);\n                convertedPath.fillColor = importedItem.fillColor;\n                importedItem.remove();\n                return this.itemToSinglePath(convertedPath);\n            }\n\n            return null;\n        }\n\n        /**\n         * Returns true if the path / compound path is closed, false otherwise.\n         */\n\n    }, {\n        key: 'closePath',\n        value: function closePath(path) {\n            if (path instanceof paper.Path) {\n                path.closed = true;\n                return;\n            }\n            if (path instanceof paper.CompoundPath) {\n                for (var i = 0; i < path.children.length; ++i) {\n                    this.closePath(path.children[i]);\n                }\n            }\n        }\n    }, {\n        key: 'countColorsInPath',\n        value: function countColorsInPath(path) {\n            var colors = [];\n            this.getColorsFromPath(path, colors);\n            var count = 0;\n            outer: for (var i = 0; i < colors.length; ++i) {\n                var color = colors[i];\n                for (var j = 0; j < i; ++j) {\n                    if (colors[j] === color) continue outer;\n                }\n                ++count;\n            }\n            return count;\n        }\n    }, {\n        key: 'getColorsFromPath',\n        value: function getColorsFromPath(path, colors) {\n            if (path instanceof paper.PathItem || path instanceof paper.Shape) {\n                var color = path.fillColor;\n                if (color) {\n                    colors.push(color.toString());\n                }\n                return;\n            }\n            if (path instanceof paper.Group) {\n                for (var i = 0; i < path.children.length; ++i) {\n                    this.getColorsFromPath(path.children[i], colors);\n                }\n            }\n        }\n    }, {\n        key: 'show',\n        value: function show() {\n            this.containerEdit.css('opacity', 1);\n            this.containerEdit.css('visibility', 'visible');\n            $('html').css({\n                height: '100%',\n                overflow: 'hidden'\n            });\n        }\n    }, {\n        key: 'hide',\n        value: function hide() {\n            var _this = this;\n\n            $('html').css({\n                height: 'auto',\n                overflow: 'auto'\n            });\n            this.containerEdit.css('opacity', 0);\n            setTimeout(function () {\n                _this.containerEdit.css('visibility', 'hidden');\n                _this.canvas.css('opacity', 0);\n                _this.loadingOverlay.show();\n                _this.loadingOverlay.css('opacity', 1);\n            }, 500);\n        }\n    }]);\n\n    return IconManager;\n}();\n\nmodule.exports = IconManager;\n","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar INITIAL_SHADOW_LENGTH = 2000,\n    TARGET_ANGLE = Math.PI / 4;\n\nvar IconShadow = function () {\n\n    /**\n     * @param iconPath path of the icon used to construct the shadow\n     * @param iconBase of the icon used to cut the shadow\n     */\n    function IconShadow(iconPath, iconBase) {\n        _classCallCheck(this, IconShadow);\n\n        this.iconBase = iconBase;\n        this.iconPath = iconPath;\n\n        this.iconShadowPaths = [];\n\n        var outlineIconPaths = this.getAndCopyPaths(iconPath);\n        for (var outlineIdx = 0; outlineIdx < outlineIconPaths.length; ++outlineIdx) {\n            var path = outlineIconPaths[outlineIdx];\n            var subPaths = [];\n            var tangent = this.findNextTangent(path);\n\n            // cut path along tangents into sub paths\n            path.split(tangent.curveIdx, tangent.timeParams[0]);\n            while (path && (tangent = this.findNextTangent(path))) {\n                var newPath = path.split(tangent.curveIdx, tangent.timeParams[0]);\n                subPaths.push(path);\n                path = newPath;\n            }\n            if (path) subPaths.push(path);\n\n            // create shadow sub shapes\n            var xyTranslation = Math.sqrt(INITIAL_SHADOW_LENGTH * INITIAL_SHADOW_LENGTH / 2);\n            var translation = new paper.Point(xyTranslation, xyTranslation);\n            for (var i = 0; i < subPaths.length; ++i) {\n                var subPath = subPaths[i];\n\n                // offset + insert all segments to create closed form\n                for (var j = subPath.segments.length - 1; j >= 0; --j) {\n                    var segment = subPath.segments[j];\n                    // make shade edges 'sharp'\n                    if (j === subPath.segments.length - 1) {\n                        segment.handleOut.x = 0;\n                        segment.handleOut.y = 0;\n                    }\n                    if (j === 0) {\n                        segment.handleIn.x = 0;\n                        segment.handleIn.y = 0;\n                    }\n                    subPath.add(new paper.Segment(segment.point.add(translation), segment.handleOut, segment.handleIn));\n                }\n                subPath.closed = true;\n                subPath.visible = false;\n\n                this.iconShadowPaths.push(subPath.clone());\n            }\n        }\n\n        // find bottom right edge of shadow (for changing length)\n        this.iconShadowBottomRightSegments = [];\n        this.iconShadowPaths.forEach(function (path) {\n            path.visible = false;\n            this.iconShadowBottomRightSegments = this.iconShadowBottomRightSegments.concat(this.findBottomRightSegments(path));\n        }.bind(this));\n        this.length = INITIAL_SHADOW_LENGTH;\n\n        // store shadow template and cut with base\n        this.applyShadow();\n    }\n\n    _createClass(IconShadow, [{\n        key: 'findNextTangent',\n        value: function findNextTangent(path) {\n            // go over each curve and try finding tangent with target angle\n            outer: for (var i = 0; i < path.curves.length; ++i) {\n                var curve = path.curves[i];\n\n                // search for tangent within curve\n                var timeParams = this.findNextTangentFromCurve(curve);\n                if (timeParams.length > 0) {\n                    // don't split curve right at the beginning (otherwise it might never stop splitting there ...)\n                    while (i === 0 && timeParams[0] < 1E-10) {\n                        timeParams.splice(0, 1);\n                        if (timeParams.length === 0) continue outer;\n                    }\n\n                    return {\n                        curveIdx: i,\n                        timeParams: timeParams\n                    };\n                }\n\n                // check for hard edges between this and the next curve\n                var nextCurve = path.curves[(i + 1) % path.curves.length];\n                var hardEdge = curve.handle2.x === 0 && curve.handle2.y === 0 || nextCurve.handle1.x === 0 || nextCurve.handle1.y === 0;\n                hardEdge = hardEdge || Math.abs(curve.getTangentAt(1, true).angle - nextCurve.getTangentAt(0, true).angle) > 1E-10;\n                if (!hardEdge) continue;\n                // (possible) TODO\n                // Currently path will be split along every hard edge. This might not be super efficient for very large paths.\n                return {\n                    curveIdx: i,\n                    timeParams: [1]\n                };\n            }\n            return undefined;\n        }\n    }, {\n        key: 'findNextTangentFromCurve',\n        value: function findNextTangentFromCurve(curve) {\n            // in case of missing handles return\n            if (curve.handle1.x === 0 && curve.handle1.y === 0 && curve.handle2.x === 0 && curve.handle2.y === 0) {\n                return [];\n            }\n\n            // find tangent with target angle (45 degrees)\n            var points = [curve.point1, curve.point1.add(curve.handle1), curve.point2.add(curve.handle2), curve.point2];\n\n            var a = {};\n            var b = {};\n            var c = {};\n\n            a.x = 3 * points[3].x - 9 * points[2].x + 9 * points[1].x - 3 * points[0].x;\n            a.y = 3 * points[3].y - 9 * points[2].y + 9 * points[1].y - 3 * points[0].y;\n\n            b.x = 6 * points[2].x - 12 * points[1].x + 6 * points[0].x;\n            b.y = 6 * points[2].y - 12 * points[1].y + 6 * points[0].y;\n\n            c.x = 3 * points[1].x - 3 * points[0].x;\n            c.y = 3 * points[1].y - 3 * points[0].y;\n\n            var t = {\n                x: Math.cos(TARGET_ANGLE),\n                y: Math.sin(TARGET_ANGLE)\n            };\n\n            var timeParams = [];\n            var den = 2 * a.x * t.y - 2 * a.y * t.x;\n            if (Math.abs(den) < 1E-10) {\n                var num = a.x * c.y - a.y * c.x;\n                den = a.x * b.y - a.y * b.x;\n                if (den != 0) {\n                    var time = -num / den;\n                    if (time >= 0 && time <= 1) timeParams.push(time);\n                }\n            } else {\n                var delta = (b.x * b.x - 4 * a.x * c.x) * t.y * t.y + (-2 * b.x * b.y + 4 * a.y * c.x + 4 * a.x * c.y) * t.x * t.y + (b.y * b.y - 4 * a.y * c.y) * t.x * t.x;\n                var k = b.x * t.y - b.y * t.x;\n                timeParams = [];\n                if (delta >= 0 && den != 0) {\n                    var d = Math.sqrt(delta);\n                    var t0 = -(k + d) / den;\n                    var t1 = (-k + d) / den;\n\n                    if (Math.abs(t0 - 1) < 1E-5) t0 = 1;\n                    if (Math.abs(t1 - 1) < 1E-5) t1 = 1;\n\n                    if (t0 >= 0 && t0 <= 1) timeParams.push(t0);\n                    if (t1 >= 0 && t1 <= 1) timeParams.push(t1);\n                }\n            }\n            if (timeParams.length === 0) return timeParams;\n\n            // clean values\n            for (var i = 0; i < timeParams.length; ++i) {\n                var _time = timeParams[i];\n\n                // if very close to 0, set value to 0\n                if (_time < 1E-5) {\n                    timeParams[i] = 0;\n                    continue;\n                }\n\n                // if very close to 1, set value to 1\n                _time = Math.abs(1 - _time);\n                if (_time < 1E-5) {\n                    timeParams[i] = 1;\n                    continue;\n                }\n            }\n\n            timeParams.sort(function (a, b) {\n                return a - b;\n            });\n            return timeParams;\n        }\n    }, {\n        key: 'findBottomRightSegments',\n        value: function findBottomRightSegments(path) {\n            var segments = [];\n            if (path instanceof paper.CompoundPath) {\n                for (var i = 0; i < path.children.length; ++i) {\n                    segments = segments.concat(this.findBottomRightSegments(path.children[i]));\n                }\n            } else {\n                for (var _i = 0; _i < path.segments.length; ++_i) {\n                    var segment = path.segments[_i];\n                    if (segment.point.getDistance(this.iconPath.bounds.topLeft) >= INITIAL_SHADOW_LENGTH * 0.95) {\n                        segments.push(segment);\n                    }\n                }\n            }\n\n            return segments;\n        }\n\n        /**\n         * @param scale factor to scale this shadow by.\n         */\n\n    }, {\n        key: 'scale',\n        value: function scale(_scale) {\n            this.iconShadowPaths.forEach(function (path) {\n                path.scale(_scale, this.iconPath.position);\n            }.bind(this));\n            this.unitedIconShadowPath.scale(_scale, this.iconPath.position);\n            this.length = this.length * _scale;\n            this.applyShadow();\n        }\n\n        /**\n         * @param {paper.Point} delta - how much this icon + shadow should be moved.\n         */\n\n    }, {\n        key: 'move',\n        value: function move(delta) {\n            this.iconShadowPaths.forEach(function (path) {\n                path.position = path.position.add(delta);\n            });\n            this.unitedIconShadowPath.position = this.unitedIconShadowPath.position.add(delta);\n            this.applyShadow();\n        }\n\n        /**\n         * Remove this shadow form the canvas.\n         */\n\n    }, {\n        key: 'remove',\n        value: function remove() {\n            this.iconShadowPaths.forEach(function (path) {\n                path.remove();\n            });\n            if (this.unitedIconShadowPath) this.unitedIconShadowPath.remove();\n            if (this.appliedIconShadowPath) this.appliedIconShadowPath.remove();\n        }\n\n        /**\n         * Cut the shadow path template(s) to base size. This creates the\n         * final shadow path.\n         */\n\n    }, {\n        key: 'applyShadow',\n        value: function applyShadow() {\n            // join sub shadows to from one path\n            if (!this.unitedIconShadowPath) this.createUnitedIconShadowPath();\n\n            // cut shadow to base\n            var basePath = this.iconBase.getPathWithoutShadows();\n            var newAppliedIconShadowPath = this.unitedIconShadowPath.intersect(basePath);\n\n            // save shadow\n            if (this.appliedIconShadowPath) {\n                this.appliedIconShadowPath.replaceWith(newAppliedIconShadowPath);\n                newAppliedIconShadowPath.fillColor = this.appliedIconShadowPath.fillColor;\n            } else {\n                // create default gradient\n                newAppliedIconShadowPath.fillColor = {\n                    gradient: {\n                        stops: [[new paper.Color(0, 0, 0, 1), 0], [new paper.Color(0, 0, 0, 0), 1]]\n                    }\n                };\n            }\n            this.appliedIconShadowPath = newAppliedIconShadowPath;\n            this.updateAppliedIconShadowPathGradientBounds();\n\n            // move shadow below icon\n            this.appliedIconShadowPath.moveBelow(this.iconPath);\n\n            // show shadow\n            this.appliedIconShadowPath.visible = true;\n        }\n\n        /**\n         * Unites all shadow parts to one shadow shape (doesn't intersect with base though,\n         * hence can be used as a 'template').\n         * Don't call this too often though, uniting shapes is CPU intensive.\n         */\n\n    }, {\n        key: 'createUnitedIconShadowPath',\n        value: function createUnitedIconShadowPath() {\n            if (this.unitedIconShadowPath) this.unitedIconShadowPath.remove();\n            this.unitedIconShadowPath = this.iconShadowPaths[0].clone();\n            for (var i = 1; i < this.iconShadowPaths.length; ++i) {\n                var subPathCopy = this.iconShadowPaths[i].clone();\n                var newShadowPath = this.unitedIconShadowPath.unite(subPathCopy);\n                subPathCopy.remove();\n                this.unitedIconShadowPath.remove();\n                this.unitedIconShadowPath = newShadowPath;\n            }\n        }\n\n        /**\n         * Sets the length of this shadow (diagonal)\n         * @param {Number} length\n         */\n\n    }, {\n        key: 'setLength',\n        value: function setLength(length) {\n            var deltaLength = length - this.length;\n            var translation = Math.sqrt(deltaLength * deltaLength / 2);\n            if (deltaLength < 0) translation = translation * -1;\n\n            for (var i = 0; i < this.iconShadowBottomRightSegments.length; ++i) {\n                var segment = this.iconShadowBottomRightSegments[i];\n                segment.point = segment.point.add(translation);\n            }\n\n            this.length = length;\n            this.createUnitedIconShadowPath();\n            this.applyShadow();\n        }\n\n        /**\n         * Sets the start intensity of this shadow.\n         * @param {Number} intensity - between 0 and 1.\n         */\n\n    }, {\n        key: 'setIntensity',\n        value: function setIntensity(intensity) {\n            this.appliedIconShadowPath.fillColor.gradient.stops[0].color.alpha = intensity;\n            // hack: just changing alpha does not trigger a redraw, 'change' this as well\n            this.appliedIconShadowPath.fillColor.destination = this.appliedIconShadowPath.fillColor.destination;\n        }\n\n        /**\n         * Sets where the shadow should begin fading.\n         * @param {Number} fading - between 0 and 1. 1 Start fading right away, 0 never fade.\n         */\n\n    }, {\n        key: 'setFading',\n        value: function setFading(fading) {\n            this.appliedIconShadowPath.fillColor.gradient.stops[0].rampPoint = 1 - fading;\n            // hack: just changing alpha does not trigger a redraw, 'change' this as well\n            this.appliedIconShadowPath.fillColor.destination = this.appliedIconShadowPath.fillColor.destination;\n        }\n    }, {\n        key: 'updateAppliedIconShadowPathGradientBounds',\n        value: function updateAppliedIconShadowPathGradientBounds() {\n            var bounds = this.unitedIconShadowPath.bounds;\n            this.appliedIconShadowPath.fillColor.origin = bounds.topLeft;\n            this.appliedIconShadowPath.fillColor.destination = bounds.bottomRight;\n        }\n\n        /**\n         * Copies and returns all paths from a given Path / CompoundPath object.\n         */\n\n    }, {\n        key: 'getAndCopyPaths',\n        value: function getAndCopyPaths(pathItem) {\n            if (pathItem instanceof paper.Path) {\n                var result = [new paper.Path(pathItem.pathData)];\n                result[0].position = pathItem.position.clone();\n                return result;\n            }\n\n            // copy children\n            var children = [];\n            for (var i = 0; i < pathItem.children.length; ++i) {\n                children.push(new paper.Path(pathItem.children[i].pathData));\n            }\n            return children;\n        }\n    }]);\n\n    return IconShadow;\n}();\n\nmodule.exports = IconShadow;\n","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar gaConstants = require('js/gaConstants');\n\n/**\n * Handles loading svg files.\n */\n\nvar InputManager = function () {\n\n    /**\n     * @param containerInput - jquery object holding all input elements\n     */\n    function InputManager(containerInput) {\n        _classCallCheck(this, InputManager);\n\n        this.containerInput = containerInput;\n        this.setupFilePicker();\n        this.setupIconPicker();\n\n        $('.icons-search').stick_in_parent();\n        $('.input-search').bind('keyup change', function () {\n            var value = $(this).val().toLowerCase();\n            $('.icon-category').each(function () {\n                var iconCategory = $(this);\n                var visibleIcons = 0;\n                iconCategory.find('.container-icon-anchor').each(function () {\n                    var icon = $(this);\n                    var name = icon.attr('data-icon-title');\n                    if (name.indexOf(value) >= 0) {\n                        icon.css('display', 'block');\n                        ++visibleIcons;\n                    } else {\n                        icon.css('display', 'none');\n                    }\n                });\n                if (visibleIcons > 0) {\n                    iconCategory.css('display', 'block');\n                } else {\n                    iconCategory.css('display', 'none');\n                }\n            });\n        }).bind('focus', function () {\n            ga('send', 'event', gaConstants.CATEGORY_INPUT, gaConstants.ACTION_ICON_SEARCH, 'focus');\n        });\n    }\n\n    _createClass(InputManager, [{\n        key: 'setupFilePicker',\n        value: function setupFilePicker() {\n            var overlay = this.containerInput.find('.icon-input-file');\n            var input = this.containerInput.find('.input-file-picker');\n\n            overlay.click(function () {\n                ga('send', 'event', gaConstants.CATEGORY_INPUT, gaConstants.ACTION_PICK_FILE, 'click');\n                input.click();\n            });\n\n            // setup drag / drop\n            overlay.on('drag dragstart dragend dragover dragenter dragleave drop', function (e) {\n                e.preventDefault();\n                e.stopPropagation();\n            }).on('dragover dragenter', function () {\n                overlay.parent().addClass('container-file-picker-hovered');\n            }).on('dragleave dragend', function () {\n                overlay.parent().removeClass('container-file-picker-hovered');\n            }).on('drop', function (e) {\n                ga('send', 'event', gaConstants.CATEGORY_INPUT, gaConstants.ACTION_PICK_FILE, 'drop');\n                input[0].files = e.originalEvent.dataTransfer.files;\n            });\n\n            // setup file picker to import\n            input.change(function () {\n                var svgFile = input[0].files[0];\n                input[0].value = '';\n                if (!svgFile) return;\n\n                // read svg file\n                var fileReader = new FileReader();\n                fileReader.onload = function (event) {\n                    if (!this.onSvgLoaded) return;\n                    this.onSvgLoaded(event.target.result);\n                }.bind(this);\n                fileReader.readAsDataURL(svgFile);\n            }.bind(this));\n        }\n    }, {\n        key: 'setupIconPicker',\n        value: function setupIconPicker() {\n            // setup click to start editing\n            var instanceThis = this;\n            this.containerInput.find('.container-icon-anchor').each(function () {\n                var icon = $(this);\n                icon.click(function () {\n                    var category = icon.attr('data-icon-category');\n                    var iconName = icon.attr('data-icon-name');\n                    var iconFileName = '/img/material-icons/' + category + '/ic_' + iconName + '_48px.svg';\n                    ga('send', 'event', gaConstants.CATEGORY_INPUT, gaConstants.ACTION_PICK_ICON, category + '/' + iconName);\n                    instanceThis.onSvgLoaded(iconFileName);\n                });\n            });\n\n            // setup smooth scrolling\n            $('.smooth-scroll').click(function () {\n                $('html, body').animate({\n                    scrollTop: $($(this).attr('href')).offset().top\n                });\n            });\n        }\n\n        /**\n         * @param callback which will be called when the local (!) svg file has finished loading.\n         * Svg data is passed as a parameter.\n         */\n\n    }, {\n        key: 'setSvgLoadedCallback',\n        value: function setSvgLoadedCallback(callback) {\n            this.onSvgLoaded = callback;\n        }\n\n        /**\n         * Hides all input UI.\n         */\n\n    }, {\n        key: 'hide',\n        value: function hide() {\n            this.containerInput.css('top', this.containerInput.css('height'));\n        }\n\n        /**\n         * Shows all input UI.\n         */\n\n    }, {\n        key: 'show',\n        value: function show() {\n            this.containerInput.css('top', 0);\n        }\n    }]);\n\n    return InputManager;\n}();\n\nmodule.exports = InputManager;\n","'use strict';\n\n/**\n * Manages multiple paper.PaperScope objects. They are:\n *\n * - draw: regular scope used for drawing / icon preview.\n * - expo: hidden scope / canvas used for exporting icon in a difference size.\n */\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar PaperScopeManager = function () {\n    function PaperScopeManager() {\n        _classCallCheck(this, PaperScopeManager);\n    }\n    // nothing\n\n\n    /**\n     * One time setup.\n     * @param drawCanvas - visible canvas for drawing.\n     * @param containerExport - export container which holds all export canvases\n     */\n\n\n    _createClass(PaperScopeManager, [{\n        key: 'setCanvases',\n        value: function setCanvases(drawCanvas, containerExport) {\n            this.drawScope = new paper.PaperScope();\n            this.drawScope.setup(drawCanvas[0]);\n\n            this.exportCanvases = [containerExport.find('#canvas-export-mdpi'), containerExport.find('#canvas-export-hdpi'), containerExport.find('#canvas-export-xhdpi'), containerExport.find('#canvas-export-xxhdpi'), containerExport.find('#canvas-export-xxxhdpi'), containerExport.find('#canvas-export-playstore-icon')];\n            this.exportScopes = [];\n            for (var i = 0; i < this.exportCanvases.length; ++i) {\n                var exportCanvas = this.exportCanvases[i];\n                var exportScope = new paper.PaperScope();\n                exportScope.setup(exportCanvas[0]);\n                exportCanvas.attr('width', exportCanvas.css('width'));\n                exportCanvas.attr('height', exportCanvas.css('height'));\n                this.exportScopes.push(exportScope);\n                exportCanvas.hide();\n            }\n        }\n\n        /**\n         * @returns the draw PaperScope.\n         */\n\n    }, {\n        key: 'draw',\n        value: function draw() {\n            return this.drawScope;\n        }\n\n        /**\n         * Activates the draw scope.\n         */\n\n    }, {\n        key: 'activateDraw',\n        value: function activateDraw() {\n            this.drawScope.activate();\n        }\n\n        /**\n         * @param {Number} idx - which scope to return\n         */\n\n    }, {\n        key: 'expo',\n        value: function expo(idx) {\n            return this.exportScopes[idx];\n        }\n\n        /**\n         * @param {Number} idx - which scope to activate\n         */\n\n    }, {\n        key: 'activateExpo',\n        value: function activateExpo(idx) {\n            this.exportScopes[idx].activate();\n        }\n\n        /**\n         * @param {Number} idx - which canvas to return\n         */\n\n    }, {\n        key: 'expoCanvas',\n        value: function expoCanvas(idx) {\n            return this.exportCanvases[idx];\n        }\n    }]);\n\n    return PaperScopeManager;\n}();\n\nmodule.exports = new PaperScopeManager();\n","'use strict';\n\nvar IconManager = require('js/IconManager'),\n    InputManager = require('js/InputManager'),\n    ErrorManager = require('js/ErrorManager'),\n    Dispatcher = require('js/Dispatcher'),\n    gaUtils = require('js/gaUtils');\n\nvar App = {\n\n    init: function init() {\n        var iconManager = new IconManager($('#canvas-draw'), $('#container-edit'), $('#btn-download-svg'), $('#color-icon'), $('#color-base'), $('#slider-icon-size'), $('#slider-shadow-length'), $('#slider-shadow-intensity'), $('#slider-shadow-fading'), $('#color-banner-background'), $('#color-banner-text'));\n\n        var inputManager = new InputManager($('#container-input'));\n\n        var errorManager = new ErrorManager($('#container-error'));\n\n        new Dispatcher(inputManager, iconManager, errorManager, this.getParameterByName('icon'));\n\n        // enable sidebar toggling\n        $('[data-toggle=\"offcanvas\"]').click(function () {\n            $('.row-offcanvas').toggleClass('active');\n        });\n\n        gaUtils.setup();\n    },\n\n    getParameterByName: function getParameterByName(name) {\n        name = name.replace(/[\\[]/, \"\\\\[\").replace(/[\\]]/, \"\\\\]\");\n        var regex = new RegExp(\"[\\\\?&]\" + name + \"=([^&#]*)\"),\n            results = regex.exec(location.search);\n        return results === null ? \"\" : decodeURIComponent(results[1].replace(/\\+/g, \" \"));\n    }\n\n};\n\nmodule.exports = App;\n","\"use strict\";\n\nfunction drawBounds(item, color) {\n    var bounds = item.strokeBounds;\n    var rect = new paper.Shape.Rectangle(bounds.point, bounds.size);\n    rect.strokeColor = color;\n}\n\nfunction drawPoint(point, color) {\n    var circle = new paper.Shape.Circle(point, 5);\n    circle.strokeColor = color;\n    circle.fillColor = color;\n}\n\nfunction drawHandle(point, handle, color) {\n    var offset = point.add(handle);\n    var line = new paper.Path.Line(point, offset);\n    line.strokeColor = color;\n    line.strokeWidth = 2;\n}\n\nfunction drawSegment(segment, color) {\n    drawPoint(segment.point, color);\n    if (segment.handleIn) drawPoint(segment.handleIn, color);\n    if (segment.handleOut) drawPoint(segment.handleOut, color);\n}\n\nfunction drawCurve(curve, color) {\n    drawPoint(curve.point1, color);\n    // drawPoint(curve.point2, color);\n    // if (curve.handle1) drawPoint(curve.handle1, color);\n    // if (curve.handle2) drawPoint(curve.handle1, color);\n    if (curve.handle1) drawHandle(curve.point1, curve.handle1, color);\n    if (curve.handle2) drawHandle(curve.point2, curve.handle2, color);\n}\n\nmodule.exports = {\n    drawBounds: drawBounds,\n    drawPoint: drawPoint,\n    drawHandle: drawHandle,\n    drawSegment: drawSegment,\n    drawCurve: drawCurve\n};\n","'use strict';\n\nmodule.exports = {\n\n    // expected svg, received png for example\n    ERROR_INVALID_SVG_FILE: {\n        title: 'Invalid SVG file',\n        msg_1: 'Are you sure that\\'s a SVG file?',\n        msg_2: ''\n    },\n\n    // multiple paths etc.\n    ERROR_NO_PATH_FOUND: {\n        title: 'No path found',\n        msg_1: 'Make sure that your SVG file contains at least a single path with a fill color.',\n        msg_2: ''\n    }\n};\n","'use strict';\n\nmodule.exports = {\n    CATEGORY_INPUT: 'input',\n    CATEGORY_EDITOR: 'editor',\n    CATEGORY_LINK_OUTBOUND: 'link-outbound',\n    CATEGORY_LINK_INTERNAL: 'link-inbound',\n    ACTION_PICK_FILE: 'pick-file',\n    ACTION_PICK_ICON: 'pick-icon',\n    ACTION_ICON_SEARCH: 'icon-search',\n    ACTION_ERROR: 'error',\n    ACTION_BACK: 'back',\n    ACTION_CHANGE_BASE_COLOR: 'change-base-color',\n    ACTION_CHANGE_ICON_COLOR: 'change-icon-color',\n    ACTION_CHANGE_SHADOW_LENGTH: 'change-shadow-length',\n    ACTION_CHANGE_SHADOW_INTENSITY: 'change-shadow-intensity',\n    ACTION_CHANGE_SHADOW_FADING: 'change-shadow-fading',\n    ACTION_CHANGE_ICON_SIZE: 'change-icon-size',\n    ACTION_CHANGE_BASE_SHAPE: 'change-base-shape',\n    ACTION_CHANGE_BASE_EFFECT: 'change-base-effect',\n    ACTION_CHANGE_FLAP_POSITION: 'change-flap-position',\n    ACTION_CHANGE_BANNER_VALUE: 'change-banner-value',\n    ACTION_CHANGE_BANNER_BACKGROUND_COLOR: 'change-banner-background-color',\n    ACTION_CHANGE_BANNER_TEXT_COLOR: 'change-banner-text-color',\n    ACTION_CHANGE_COLOR_TYPE: 'change-color-type',\n    ACTION_DOWNLOAD: 'download',\n    ACTION_CLICK: 'click'\n};\n","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar gaConstants = require('js/gaConstants');\n\nvar GaUtils = function () {\n    function GaUtils() {\n        _classCallCheck(this, GaUtils);\n    }\n\n    _createClass(GaUtils, [{\n        key: 'setup',\n        value: function setup() {\n            $('.track').click(function () {\n                var target = $(this).attr('href');\n                var category = gaConstants.CATEGORY_LINK_OUTBOUND;\n                if (target.indexOf('#') === 0) {\n                    category = gaConstants.CATEGORY_LINK_INTERNAL;\n                }\n                console.log('sending');\n                console.log(category);\n                console.log(target);\n                ga('send', 'event', category, gaConstants.ACTION_CLICK, target);\n            });\n        }\n    }]);\n\n    return GaUtils;\n}();\n\nmodule.exports = new GaUtils();\n","'use strict';\n\nvar LICENSE_CC_BY_NC_3 = \"Attribution-NonCommercial 3.0 Unported\\n\" + \"\\n\" + \"THE WORK (AS DEFINED BELOW) IS PROVIDED UNDER THE TERMS OF THIS CREATIVE COMMONS PUBLIC LICENSE (\\\"CCPL\\\" OR \\\"LICENSE\\\"). THE WORK IS PROTECTED BY COPYRIGHT AND/OR OTHER APPLICABLE LAW. ANY USE OF THE WORK OTHER THAN AS AUTHORIZED UNDER THIS LICENSE OR COPYRIGHT LAW IS PROHIBITED.\\n\" + \"BY EXERCISING ANY RIGHTS TO THE WORK PROVIDED HERE, YOU ACCEPT AND AGREE TO BE BOUND BY THE TERMS OF THIS LICENSE. TO THE EXTENT THIS LICENSE MAY BE CONSIDERED TO BE A CONTRACT, THE LICENSOR GRANTS YOU THE RIGHTS CONTAINED HERE IN CONSIDERATION OF YOUR ACCEPTANCE OF SUCH TERMS AND CONDITIONS.\\n\" + \"1. Definitions\\n\" + \"\\\"Adaptation\\\" means a work based upon the Work, or upon the Work and other pre-existing works, such as a translation, adaptation, derivative work, arrangement of music or other alterations of a literary or artistic work, or phonogram or performance and includes cinematographic adaptations or any other form in which the Work may be recast, transformed, or adapted including in any form recognizably derived from the original, except that a work that constitutes a Collection will not be considered an Adaptation for the purpose of this License. For the avoidance of doubt, where the Work is a musical work, performance or phonogram, the synchronization of the Work in timed-relation with a moving image (\\\"synching\\\") will be considered an Adaptation for the purpose of this License.\\n\" + \"\\\"Collection\\\" means a collection of literary or artistic works, such as encyclopedias and anthologies, or performances, phonograms or broadcasts, or other works or subject matter other than works listed in Section 1(f) below, which, by reason of the selection and arrangement of their contents, constitute intellectual creations, in which the Work is included in its entirety in unmodified form along with one or more other contributions, each constituting separate and independent works in themselves, which together are assembled into a collective whole. A work that constitutes a Collection will not be considered an Adaptation (as defined above) for the purposes of this License.\\n\" + \"\\\"Distribute\\\" means to make available to the public the original and copies of the Work or Adaptation, as appropriate, through sale or other transfer of ownership.\\n\" + \"\\\"Licensor\\\" means the individual, individuals, entity or entities that offer(s) the Work under the terms of this License.\\n\" + \"\\\"Original Author\\\" means, in the case of a literary or artistic work, the individual, individuals, entity or entities who created the Work or if no individual or entity can be identified, the publisher; and in addition (i) in the case of a performance the actors, singers, musicians, dancers, and other persons who act, sing, deliver, declaim, play in, interpret or otherwise perform literary or artistic works or expressions of folklore; (ii) in the case of a phonogram the producer being the person or legal entity who first fixes the sounds of a performance or other sounds; and, (iii) in the case of broadcasts, the organization that transmits the broadcast.\\n\" + \"\\\"Work\\\" means the literary and/or artistic work offered under the terms of this License including without limitation any production in the literary, scientific and artistic domain, whatever may be the mode or form of its expression including digital form, such as a book, pamphlet and other writing; a lecture, address, sermon or other work of the same nature; a dramatic or dramatico-musical work; a choreographic work or entertainment in dumb show; a musical composition with or without words; a cinematographic work to which are assimilated works expressed by a process analogous to cinematography; a work of drawing, painting, architecture, sculpture, engraving or lithography; a photographic work to which are assimilated works expressed by a process analogous to photography; a work of applied art; an illustration, map, plan, sketch or three-dimensional work relative to geography, topography, architecture or science; a performance; a broadcast; a phonogram; a compilation of data to the extent it is protected as a copyrightable work; or a work performed by a variety or circus performer to the extent it is not otherwise considered a literary or artistic work.\\n\" + \"\\\"You\\\" means an individual or entity exercising rights under this License who has not previously violated the terms of this License with respect to the Work, or who has received express permission from the Licensor to exercise rights under this License despite a previous violation.\\n\" + \"\\\"Publicly Perform\\\" means to perform public recitations of the Work and to communicate to the public those public recitations, by any means or process, including by wire or wireless means or public digital performances; to make available to the public Works in such a way that members of the public may access these Works from a place and at a place individually chosen by them; to perform the Work to the public by any means or process and the communication to the public of the performances of the Work, including by public digital performance; to broadcast and rebroadcast the Work by any means including signs, sounds or images.\\n\" + \"\\\"Reproduce\\\" means to make copies of the Work by any means including without limitation by sound or visual recordings and the right of fixation and reproducing fixations of the Work, including storage of a protected performance or phonogram in digital form or other electronic medium.\\n\" + \"2. Fair Dealing Rights. Nothing in this License is intended to reduce, limit, or restrict any uses free from copyright or rights arising from limitations or exceptions that are provided for in connection with the copyright protection under copyright law or other applicable laws.\\n\" + \"3. License Grant. Subject to the terms and conditions of this License, Licensor hereby grants You a worldwide, royalty-free, non-exclusive, perpetual (for the duration of the applicable copyright) license to exercise the rights in the Work as stated below:\\n\" + \"to Reproduce the Work, to incorporate the Work into one or more Collections, and to Reproduce the Work as incorporated in the Collections;\\n\" + \"to create and Reproduce Adaptations provided that any such Adaptation, including any translation in any medium, takes reasonable steps to clearly label, demarcate or otherwise identify that changes were made to the original Work. For example, a translation could be marked \\\"The original work was translated from English to Spanish,\\\" or a modification could indicate \\\"The original work has been modified.\\\";\\n\" + \"to Distribute and Publicly Perform the Work including as incorporated in Collections; and,\\n\" + \"to Distribute and Publicly Perform Adaptations.\\n\" + \"The above rights may be exercised in all media and formats whether now known or hereafter devised. The above rights include the right to make such modifications as are technically necessary to exercise the rights in other media and formats. Subject to Section 8(f), all rights not expressly granted by Licensor are hereby reserved, including but not limited to the rights set forth in Section 4(d).\\n\" + \"4. Restrictions. The license granted in Section 3 above is expressly made subject to and limited by the following restrictions:\\n\" + \"You may Distribute or Publicly Perform the Work only under the terms of this License. You must include a copy of, or the Uniform Resource Identifier (URI) for, this License with every copy of the Work You Distribute or Publicly Perform. You may not offer or impose any terms on the Work that restrict the terms of this License or the ability of the recipient of the Work to exercise the rights granted to that recipient under the terms of the License. You may not sublicense the Work. You must keep intact all notices that refer to this License and to the disclaimer of warranties with every copy of the Work You Distribute or Publicly Perform. When You Distribute or Publicly Perform the Work, You may not impose any effective technological measures on the Work that restrict the ability of a recipient of the Work from You to exercise the rights granted to that recipient under the terms of the License. This Section 4(a) applies to the Work as incorporated in a Collection, but this does not require the Collection apart from the Work itself to be made subject to the terms of this License. If You create a Collection, upon notice from any Licensor You must, to the extent practicable, remove from the Collection any credit as required by Section 4(c), as requested. If You create an Adaptation, upon notice from any Licensor You must, to the extent practicable, remove from the Adaptation any credit as required by Section 4(c), as requested.\\n\" + \"You may not exercise any of the rights granted to You in Section 3 above in any manner that is primarily intended for or directed toward commercial advantage or private monetary compensation. The exchange of the Work for other copyrighted works by means of digital file-sharing or otherwise shall not be considered to be intended for or directed toward commercial advantage or private monetary compensation, provided there is no payment of any monetary compensation in connection with the exchange of copyrighted works.\\n\" + \"If You Distribute, or Publicly Perform the Work or any Adaptations or Collections, You must, unless a request has been made pursuant to Section 4(a), keep intact all copyright notices for the Work and provide, reasonable to the medium or means You are utilizing: (i) the name of the Original Author (or pseudonym, if applicable) if supplied, and/or if the Original Author and/or Licensor designate another party or parties (e.g., a sponsor institute, publishing entity, journal) for attribution (\\\"Attribution Parties\\\") in Licensor's copyright notice, terms of service or by other reasonable means, the name of such party or parties; (ii) the title of the Work if supplied; (iii) to the extent reasonably practicable, the URI, if any, that Licensor specifies to be associated with the Work, unless such URI does not refer to the copyright notice or licensing information for the Work; and, (iv) consistent with Section 3(b), in the case of an Adaptation, a credit identifying the use of the Work in the Adaptation (e.g., \\\"French translation of the Work by Original Author,\\\" or \\\"Screenplay based on original Work by Original Author\\\"). The credit required by this Section 4(c) may be implemented in any reasonable manner; provided, however, that in the case of a Adaptation or Collection, at a minimum such credit will appear, if a credit for all contributing authors of the Adaptation or Collection appears, then as part of these credits and in a manner at least as prominent as the credits for the other contributing authors. For the avoidance of doubt, You may only use the credit required by this Section for the purpose of attribution in the manner set out above and, by exercising Your rights under this License, You may not implicitly or explicitly assert or imply any connection with, sponsorship or endorsement by the Original Author, Licensor and/or Attribution Parties, as appropriate, of You or Your use of the Work, without the separate, express prior written permission of the Original Author, Licensor and/or Attribution Parties.\\n\" + \"For the avoidance of doubt:\\n\" + \"Non-waivable Compulsory License Schemes. In those jurisdictions in which the right to collect royalties through any statutory or compulsory licensing scheme cannot be waived, the Licensor reserves the exclusive right to collect such royalties for any exercise by You of the rights granted under this License;\\n\" + \"Waivable Compulsory License Schemes. In those jurisdictions in which the right to collect royalties through any statutory or compulsory licensing scheme can be waived, the Licensor reserves the exclusive right to collect such royalties for any exercise by You of the rights granted under this License if Your exercise of such rights is for a purpose or use which is otherwise than noncommercial as permitted under Section 4(b) and otherwise waives the right to collect royalties through any statutory or compulsory licensing scheme; and,\\n\" + \"Voluntary License Schemes. The Licensor reserves the right to collect royalties, whether individually or, in the event that the Licensor is a member of a collecting society that administers voluntary licensing schemes, via that society, from any exercise by You of the rights granted under this License that is for a purpose or use which is otherwise than noncommercial as permitted under Section 4(c).\\n\" + \"Except as otherwise agreed in writing by the Licensor or as may be otherwise permitted by applicable law, if You Reproduce, Distribute or Publicly Perform the Work either by itself or as part of any Adaptations or Collections, You must not distort, mutilate, modify or take other derogatory action in relation to the Work which would be prejudicial to the Original Author's honor or reputation. Licensor agrees that in those jurisdictions (e.g. Japan), in which any exercise of the right granted in Section 3(b) of this License (the right to make Adaptations) would be deemed to be a distortion, mutilation, modification or other derogatory action prejudicial to the Original Author's honor and reputation, the Licensor will waive or not assert, as appropriate, this Section, to the fullest extent permitted by the applicable national law, to enable You to reasonably exercise Your right under Section 3(b) of this License (right to make Adaptations) but not otherwise.\\n\" + \"5. Representations, Warranties and Disclaimer\\n\" + \"UNLESS OTHERWISE MUTUALLY AGREED TO BY THE PARTIES IN WRITING, LICENSOR OFFERS THE WORK AS-IS AND MAKES NO REPRESENTATIONS OR WARRANTIES OF ANY KIND CONCERNING THE WORK, EXPRESS, IMPLIED, STATUTORY OR OTHERWISE, INCLUDING, WITHOUT LIMITATION, WARRANTIES OF TITLE, MERCHANTIBILITY, FITNESS FOR A PARTICULAR PURPOSE, NONINFRINGEMENT, OR THE ABSENCE OF LATENT OR OTHER DEFECTS, ACCURACY, OR THE PRESENCE OF ABSENCE OF ERRORS, WHETHER OR NOT DISCOVERABLE. SOME JURISDICTIONS DO NOT ALLOW THE EXCLUSION OF IMPLIED WARRANTIES, SO SUCH EXCLUSION MAY NOT APPLY TO YOU.\\n\" + \"6. Limitation on Liability. EXCEPT TO THE EXTENT REQUIRED BY APPLICABLE LAW, IN NO EVENT WILL LICENSOR BE LIABLE TO YOU ON ANY LEGAL THEORY FOR ANY SPECIAL, INCIDENTAL, CONSEQUENTIAL, PUNITIVE OR EXEMPLARY DAMAGES ARISING OUT OF THIS LICENSE OR THE USE OF THE WORK, EVEN IF LICENSOR HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.\\n\" + \"7. Termination\\n\" + \"This License and the rights granted hereunder will terminate automatically upon any breach by You of the terms of this License. Individuals or entities who have received Adaptations or Collections from You under this License, however, will not have their licenses terminated provided such individuals or entities remain in full compliance with those licenses. Sections 1, 2, 5, 6, 7, and 8 will survive any termination of this License.\\n\" + \"Subject to the above terms and conditions, the license granted here is perpetual (for the duration of the applicable copyright in the Work). Notwithstanding the above, Licensor reserves the right to release the Work under different license terms or to stop distributing the Work at any time; provided, however that any such election will not serve to withdraw this License (or any other license that has been, or is required to be, granted under the terms of this License), and this License will continue in full force and effect unless terminated as stated above.\\n\" + \"8. Miscellaneous\\n\" + \"Each time You Distribute or Publicly Perform the Work or a Collection, the Licensor offers to the recipient a license to the Work on the same terms and conditions as the license granted to You under this License.\\n\" + \"Each time You Distribute or Publicly Perform an Adaptation, Licensor offers to the recipient a license to the original Work on the same terms and conditions as the license granted to You under this License.\\n\" + \"If any provision of this License is invalid or unenforceable under applicable law, it shall not affect the validity or enforceability of the remainder of the terms of this License, and without further action by the parties to this agreement, such provision shall be reformed to the minimum extent necessary to make such provision valid and enforceable.\\n\" + \"No term or provision of this License shall be deemed waived and no breach consented to unless such waiver or consent shall be in writing and signed by the party to be charged with such waiver or consent.\\n\" + \"This License constitutes the entire agreement between the parties with respect to the Work licensed here. There are no understandings, agreements or representations with respect to the Work not specified here. Licensor shall not be bound by any additional provisions that may appear in any communication from You. This License may not be modified without the mutual written agreement of the Licensor and You.\\n\" + \"The rights granted under, and the subject matter referenced, in this License were drafted utilizing the terminology of the Berne Convention for the Protection of Literary and Artistic Works (as amended on September 28, 1979), the Rome Convention of 1961, the WIPO Copyright Treaty of 1996, the WIPO Performances and Phonograms Treaty of 1996 and the Universal Copyright Convention (as revised on July 24, 1971). These rights and subject matter take effect in the relevant jurisdiction in which the License terms are sought to be enforced according to the corresponding provisions of the implementation of those treaty provisions in the applicable national law. If the standard suite of rights granted under applicable copyright law includes additional rights not granted under this License, such additional rights are deemed to be included in the License; this License is not intended to restrict the license of any rights under applicable law.\\n\";\n\nvar LICENSE_GENERAL = \"License\\n\" + \"=======\\n\" + \"\\n\" + \"Icons generated with the Android Material Icon Generator are licensed under the Creative Commons Attribution-NonCommercial 3.0 License\" + \" (https://creativecommons.org/licenses/by-nc/3.0/).\\n\" + \"\\n\" + \"For commercial usage, please submit a request under https://goo.gl/forms/zX8GZ3Jz89SRyHdJ2 \" + \"or send us an email to material-icons@bitdroid.de.\" + \"\\n\" + \"\\n\" + \"\\n\" + \"Google Material Icons License\\n\" + \"=============================\\n\" + \"\\n\" + \"This license applies to the Google Material Icons, which can be seen on the front page of the Android Material icon generator.\\n\" + \"\\n\" + \"(Copied from https://github.com/google/material-design-icons)\\n\" + \"We have made these icons available for you to incorporate them into your\\n\" + \"products under the Creative Common Attribution 4.0 International License (CC-BY\\n\" + \"4.0, https://creativecommons.org/licenses/by/4.0/). Feel free to remix and\\n\" + \"re-share these icons and documentation in your products.  We'd love attribution\\n\" + \"in your app's *about* screen, but it's not required.  The only thing we ask is\\n\" + \"that you not re-sell the icons themselves.\";\n\nmodule.exports = {\n    LICENSE_CC_BY_NC_3: LICENSE_CC_BY_NC_3,\n    LICENSE_GENERAL: LICENSE_GENERAL\n};\n"]}